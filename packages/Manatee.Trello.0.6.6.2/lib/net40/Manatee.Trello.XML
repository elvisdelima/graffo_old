<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Manatee.Trello</name>
    </assembly>
    <members>
        <member name="T:Manatee.Trello.Action">
            <summary>
            Actions are generated by Trello to record what users do.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Contracts.ExpiringObject">
            <summary>
            A base class for an object which expires after a given time and automatically
            calls a service to refresh its data.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Contracts.ExpiringObject.MarkForUpdate">
            <summary>
            Explicitly marks the entity as expired, forcing it to update.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Contracts.ExpiringObject.Refresh">
            <summary>
            Retrieves updated data from the service instance and refreshes the object.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Contracts.ExpiringObject.UpdateDependencies(Manatee.Trello.Contracts.ExpiringObject)">
            <summary>
            Updates the dependencies of an entity to that of this object.
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Manatee.Trello.Contracts.ExpiringObject.VerifyNotExpired">
            <summary>
            Verifies that the object is not expired and updates if necessary.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Contracts.ExpiringObject.UpdateById``1(``0@,Manatee.Trello.EntityRequestType,System.String)">
            <summary>
            Updates a reference to another object if null by downloading it from trello.com.
            </summary>
            <typeparam name="T">The ExpiringObject type.</typeparam>
            <param name="entity">The entity reference</param>
            <param name="requestType">The request type used to download the entity.</param>
            <param name="id">The entity id.</param>
            <returns></returns>
        </member>
        <member name="M:Manatee.Trello.Contracts.ExpiringObject.AddDefaultParameters">
            <summary>
            Adds the default parameters for the type.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Contracts.ExpiringObject.BuildList``1(Manatee.Trello.EntityRequestType,System.String)">
            <summary>
            Builds the specified ExpiringList.
            </summary>
            <typeparam name="T">The type of entity.</typeparam>
            <param name="requestType">The request type used to populate the list.</param>
            <param name="fields">The field list for the request.</param>
            <param name="filter">The filter for the request.</param>
            <returns>The specified ExpiringList.</returns>
        </member>
        <member name="P:Manatee.Trello.Contracts.ExpiringObject.Id">
            <summary>
            Gets a unique identifier (not necessarily a GUID).
            </summary>
        </member>
        <member name="P:Manatee.Trello.Contracts.ExpiringObject.IsExpired">
            <summary>
            Gets whether this object has expired is an needs to be updated.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Contracts.ExpiringObject.IsStubbed">
            <summary>
            Gets whether this entity represents an actual entity on Trello.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Contracts.ExpiringObject.Parameters">
            <summary>
            Gets a collection of parameters to be added to a request which uses this object.
            </summary>
            <remarks>
            Parameters is cleared after each use.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.Contracts.ExpiringObject.Expires">
            <summary>
            Gets or sets when this entity expires.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Contracts.ExpiringObject.AllowSelfUpdate">
            <summary>
            Gets or sets whether this entity is allowed to update itself.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Action.#ctor">
            <summary>
            Creates a new instance of the Action class.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Action.Delete">
            <summary>
            Deletes this action.  This cannot be undone.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Action.Equals(Manatee.Trello.Action)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Manatee.Trello.Action.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The object to compare with the current object. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.Action.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.Action.CompareTo(Manatee.Trello.Action)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <returns>
            A value that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the <paramref name="other"/> parameter.Zero This object is equal to <paramref name="other"/>. Greater than zero This object is greater than <paramref name="other"/>. 
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Manatee.Trello.Action.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.Action.Refresh">
            <summary>
            Retrieves updated data from the service instance and refreshes the object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Action.Attachment">
            <summary>
            Gets the attachment, if one exists, associated with the action.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Action.Board">
            <summary>
            Gets the board, if one exists, associated with the action.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Action.Card">
            <summary>
            Gets the card, if one exists, associated with the action.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Action.CardShortId">
            <summary>
            Gets the short ID of the card, if one exists, associated with the action.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Action.CheckList">
            <summary>
            Gets the check list, if one exists, associated with the action.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Action.CheckItem">
            <summary>
            Gets the check item, if one exists, associated with the action.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Action.Data">
            <summary>
            Data associated with the action.  Contents depend upon the action's type.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Action.Date">
            <summary>
            When the action was performed.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Action.Id">
            <summary>
            Gets a unique identifier (not necessarily a GUID).
            </summary>
        </member>
        <member name="P:Manatee.Trello.Action.List">
            <summary>
            Gets the list, if one exists, associated with the action.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Action.Member">
            <summary>
            Gets the member, if one exists, associated with the action.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Action.MemberCreator">
            <summary>
            The member who performed the action.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Action.Organization">
            <summary>
            Gets the organization, if one exists, associated with the action.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Action.SourceBoard">
            <summary>
            Gets the board which was copied, if one exists, associated with the action.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Action.SourceCard">
            <summary>
            Gets the card which was copied, if one exists, associated with the action.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Action.SourceList">
            <summary>
            Gets the list from which a card was moved, if one exists, associated with the action.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Action.Text">
            <summary>
            Gets the text, if one exists, associated with the action.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Action.Type">
            <summary>
            The type of action performed.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Action.IsStubbed">
            <summary>
            Gets whether this entity represents an actual entity on Trello.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Contracts.ICache">
            <summary>
            Defines operations for a cache.  Used by the TrelloService class.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Contracts.ICache.Add(System.Object)">
            <summary>
            Adds an object to the cache, if it does not already exist.
            </summary>
            <param name="obj">The object to add.</param>
        </member>
        <member name="M:Manatee.Trello.Contracts.ICache.Find``1(System.Func{``0,System.Boolean},System.Func{``0})">
            <summary>
            Finds an object of a certain type meeting specified criteria.
            </summary>
            <typeparam name="T">The type of object to find.</typeparam>
            <param name="match">A function which evaluates the matching criteria.</param>
            <param name="fetch">A function which can use alternate means to retrieve the item.</param>
            <returns>The first matching object, or the fetched object if applicable.</returns>
            <remarks>
            When the function in the fetch parameter is called, the returned object should be
            added to the queue.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.Contracts.ICache.Remove(System.Object)">
            <summary>
            Removes an object from the cache, if it exists.
            </summary>
            <param name="obj">The object to remove.</param>
        </member>
        <member name="M:Manatee.Trello.Contracts.ICache.Clear">
            <summary>
            Removes all objects from the cache.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Contracts.ILog">
            <summary>
            Defines methods required to log information, events, and errors generated
            throughout Manatee.Trello.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Contracts.ILog.Debug(System.String,System.Object[])">
            <summary>
            Writes a debug level log entry.
            </summary>
            <param name="message">The message or message format.</param>
            <param name="parameters">A list of parameters.</param>
        </member>
        <member name="M:Manatee.Trello.Contracts.ILog.Info(System.String,System.Object[])">
            <summary>
            Writes an information level log entry.
            </summary>
            <param name="message">The message or message format.</param>
            <param name="parameters">A list of paramaters.</param>
        </member>
        <member name="M:Manatee.Trello.Contracts.ILog.Error(System.Exception,System.Boolean)">
            <summary>
            Writes an error level log entry.
            </summary>
            <param name="e">The exception that will be or was thrown.</param>
            <param name="shouldThrow">true if the exception should be thrown; false otherwise.</param>
            <remarks>
            Manatee.Trello relies on the logger to throw any exceptions.  Not implmenting this functionality
            may result in undesired behavior.
            </remarks>
        </member>
        <member name="T:Manatee.Trello.AvatarSourceType">
            <summary>
            Enumerates the avatar sources used by Trello.
            </summary>
        </member>
        <member name="F:Manatee.Trello.AvatarSourceType.Unknown">
            <summary>
            Indicates the avatar source is not recognized.
            </summary>
        </member>
        <member name="F:Manatee.Trello.AvatarSourceType.None">
            <summary>
            Indicates there is no avatar.
            </summary>
        </member>
        <member name="F:Manatee.Trello.AvatarSourceType.Upload">
            <summary>
            Indicates the avatar has been uploaded by the user.
            </summary>
        </member>
        <member name="F:Manatee.Trello.AvatarSourceType.Gravatar">
            <summary>
            Indicates the avatar is supplied by Gravatar.
            </summary>
        </member>
        <member name="T:Manatee.Trello.EntityRequestType">
            <summary>
            Enumerates the various types of requests, including which kind of entity
            is submitting the request and the desired operation.
            </summary>
            <remarks>
            This enumeration is exposed solely for unit testing purposes.
            </remarks>
        </member>
        <member name="T:Manatee.Trello.MemberPreferenceSummaryPeriodType">
            <summary>
            Enumerates the accepted values for the MinutesBetweenSummaries property on the
            MemberPreferences object.
            </summary>
        </member>
        <member name="F:Manatee.Trello.MemberPreferenceSummaryPeriodType.Disabled">
            <summary>
            Indicates that summary emails are disabled.
            </summary>
        </member>
        <member name="F:Manatee.Trello.MemberPreferenceSummaryPeriodType.OneMinute">
            <summary>
            Indicates that summary emails should be sent every minute, when notifications
            are present.
            </summary>
        </member>
        <member name="F:Manatee.Trello.MemberPreferenceSummaryPeriodType.OneHour">
            <summary>
            Indicates that summary emails should be sent every hour, when notifications
            are present.
            </summary>
        </member>
        <member name="T:Manatee.Trello.SearchModelType">
            <summary>
            Enumerates the model types for which one can search.
            </summary>
        </member>
        <member name="F:Manatee.Trello.SearchModelType.Actions">
            <summary>
            Indicates the search should return actions.
            </summary>
        </member>
        <member name="F:Manatee.Trello.SearchModelType.Boards">
            <summary>
            Indicates the search should return boards.
            </summary>
        </member>
        <member name="F:Manatee.Trello.SearchModelType.Cards">
            <summary>
            Indicates the search should return cards.
            </summary>
        </member>
        <member name="F:Manatee.Trello.SearchModelType.Members">
            <summary>
            Indicates the search should return members.
            </summary>
        </member>
        <member name="F:Manatee.Trello.SearchModelType.Organizations">
            <summary>
            Indicates the search should return organizations.
            </summary>
        </member>
        <member name="F:Manatee.Trello.SearchModelType.All">
            <summary>
            Indicates the search should return all model types.
            </summary>
        </member>
        <member name="T:Manatee.Trello.TokenModelType">
            <summary>
            Enumerates the model types to which a user token may grant access.
            </summary>
        </member>
        <member name="F:Manatee.Trello.TokenModelType.Unknown">
            <summary>
            Assigned when the model type is not recognized.
            </summary>
        </member>
        <member name="F:Manatee.Trello.TokenModelType.Member">
            <summary>
            Indicates the model is one or more Members.
            </summary>
        </member>
        <member name="F:Manatee.Trello.TokenModelType.Board">
            <summary>
            Indicates the model is one or more Boards.
            </summary>
        </member>
        <member name="F:Manatee.Trello.TokenModelType.Organization">
            <summary>
            Indicates the model is one or more Organizations.
            </summary>
        </member>
        <member name="T:Manatee.Trello.OrganizationMembershipType">
            <summary>
             Enumerates known board membership types.
            </summary>
        </member>
        <member name="F:Manatee.Trello.OrganizationMembershipType.Unknown">
            <summary>
            Not recognized.  May have been created since the current version of this API.
            </summary>
        </member>
        <member name="F:Manatee.Trello.OrganizationMembershipType.Admin">
            <summary>
            Indicates the member is an admin of the organization.
            </summary>
        </member>
        <member name="F:Manatee.Trello.OrganizationMembershipType.Normal">
            <summary>
            Indicates the member is a normal member of the organization.
            </summary>
        </member>
        <member name="F:Manatee.Trello.OrganizationMembershipType.Observer">
            <summary>
            Indicates the member is may only view the organization.
            </summary>
        </member>
        <member name="F:Manatee.Trello.OrganizationMembershipType.Ghost">
            <summary>
            Indicates the member has been invited, but has not yet joined Trello.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Exceptions.MissingRestClientProviderException">
            <summary>
            Thrown on TrelloService creation when the IRestClientProvider implementation is null.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Exceptions.MissingRestClientProviderException.#ctor">
            <summary>
            Creates a new instance of the MissingRestClientProviderException class.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Exceptions.MissingSerializerException">
            <summary>
            Thrown on TrelloService creation when either the ISerializer or IDeserializer
            implementation is null.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Exceptions.MissingSerializerException.#ctor">
            <summary>
            Creates a new instance of the MissingSerializerException class.
            </summary>
        </member>
        <member name="T:Manatee.Trello.ExpiringExtensions">
            <summary>
            Contains extension methods for any ExpiringObject implementation.
            </summary>
        </member>
        <member name="M:Manatee.Trello.ExpiringExtensions.CreateWebhook``1(``0,System.String)">
            <summary>
            Creates a webhook for the specified entity.
            </summary>
            <typeparam name="T">The type of the entity.</typeparam>
            <param name="entity">The entity.</param>
            <param name="callbackUrl">The callback URL to receive webhook messages.</param>
            <returns>A <see cref="T:Manatee.Trello.Webhook`1"/> object containing the details of the webhook.</returns>
        </member>
        <member name="T:Manatee.Trello.Internal.DataAccess.IEntityRepository">
            <summary>
            Manages creation and retrieval of Trello entities.
            </summary>
            <remarks>
            This interface is only exposed for unit testing purposes.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.Internal.DataAccess.IEntityRepository.Refresh``1(``0,Manatee.Trello.EntityRequestType)">
            <summary />
        </member>
        <member name="M:Manatee.Trello.Internal.DataAccess.IEntityRepository.RefreshCollection``1(Manatee.Trello.Contracts.ExpiringObject,Manatee.Trello.EntityRequestType)">
            <summary />
        </member>
        <member name="M:Manatee.Trello.Internal.DataAccess.IEntityRepository.Download``1(Manatee.Trello.EntityRequestType,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary />
        </member>
        <member name="M:Manatee.Trello.Internal.DataAccess.IEntityRepository.GenerateList``1(Manatee.Trello.Contracts.ExpiringObject,Manatee.Trello.EntityRequestType,System.String)">
            <summary />
        </member>
        <member name="M:Manatee.Trello.Internal.DataAccess.IEntityRepository.Upload(Manatee.Trello.EntityRequestType,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary />
        </member>
        <member name="M:Manatee.Trello.Internal.DataAccess.IEntityRepository.NetworkStatusChanged(System.Object,System.EventArgs)">
            <summary />
        </member>
        <member name="P:Manatee.Trello.Internal.DataAccess.IEntityRepository.EntityDuration">
            <summary />
        </member>
        <member name="P:Manatee.Trello.Internal.DataAccess.IEntityRepository.AllowSelfUpdate">
            <summary />
        </member>
        <member name="T:Manatee.Trello.Internal.Genesis.IEndpointFactory">
            <summary>
            Defines methods required to build the required endpoint which will be used
            during a REST call.
            </summary>
            <remarks>
            This interface is only exposed for unit testing purposes.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.Internal.Genesis.IEndpointFactory.Build(Manatee.Trello.EntityRequestType,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary />
        </member>
        <member name="M:Manatee.Trello.Internal.Genesis.IEndpointFactory.GetRequestType``1">
            <summary />
        </member>
        <member name="T:Manatee.Trello.Internal.Genesis.IEntityFactory">
            <summary>
            Defines methods required to create entities from a given JSON entity type.
            </summary>
            <remarks>
            This interface is only exposed for unit testing purposes.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.Internal.Genesis.IEntityFactory.CreateEntity``1">
            <summary />
        </member>
        <member name="T:Manatee.Trello.Internal.ICanWebhook">
            <summary>
            Simple interface for defining whether an entity supports webhooks.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Internal.ICanWebhook.ApplyAction(Manatee.Trello.Action)">
            <summary>
            Applies the changes an action represents.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="T:Manatee.Trello.Rest.IRestResponse`1">
            <summary>
            Defines required properties returned by RESTful calls.
            </summary>
            <typeparam name="T">The type expected to be returned by the call.</typeparam>
        </member>
        <member name="T:Manatee.Trello.Rest.IRestResponse">
            <summary>
            Defines properties required for objects returned by RESTful calls.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Rest.IRestResponse.Content">
            <summary>
            The JSON content returned by the call.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Rest.IRestResponse.StatusCode">
            <summary>
            Indicates the status of the response.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Rest.IRestResponse`1.Data">
            <summary>
            The deserialized data.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Internal.IValidator">
            <summary>
            Defines validation methods that throw exceptions when validation fails.
            </summary>
            <remarks>
            This interface is only exposed for unit testing purposes.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.Internal.IValidator.Writable">
            <summary>
            
            </summary>
        </member>
        <member name="M:Manatee.Trello.Internal.IValidator.Entity``1(``0,System.Boolean)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <param name="allowNulls"></param>
        </member>
        <member name="M:Manatee.Trello.Internal.IValidator.Nullable``1(System.Nullable{``0})">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
        </member>
        <member name="M:Manatee.Trello.Internal.IValidator.NonEmptyString(System.String)">
            <summary>
            
            </summary>
            <param name="str"></param>
        </member>
        <member name="M:Manatee.Trello.Internal.IValidator.Position(Manatee.Trello.Position)">
            <summary>
            
            </summary>
            <param name="pos"></param>
        </member>
        <member name="M:Manatee.Trello.Internal.IValidator.MinStringLength(System.String,System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <param name="minLength"></param>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:Manatee.Trello.Internal.IValidator.StringLengthRange(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <param name="low"></param>
            <param name="high"></param>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:Manatee.Trello.Internal.IValidator.UserName(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Manatee.Trello.Internal.IValidator.OrgName(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Manatee.Trello.Internal.IValidator.Enumeration``1(``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
        </member>
        <member name="M:Manatee.Trello.Internal.IValidator.Url(System.String)">
            <summary>
            
            </summary>
            <param name="url"></param>
        </member>
        <member name="M:Manatee.Trello.Internal.IValidator.ArgumentNotNull(System.Object,System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="name"></param>
        </member>
        <member name="T:Manatee.Trello.Internal.Endpoint">
            <summary>
            Represents a series of URL segments which together represent a REST
            method in Trello's API.
            </summary>
            <remarks>
            This class is only exposed for unit testing purposes.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.Internal.Endpoint.#ctor(Manatee.Trello.Rest.RestMethod,System.Collections.Generic.IEnumerable{System.String})">
            <summary />
        </member>
        <member name="M:Manatee.Trello.Internal.Endpoint.#ctor(Manatee.Trello.Rest.RestMethod,System.String[])">
            <summary />
        </member>
        <member name="M:Manatee.Trello.Internal.Endpoint.Resolve(System.String,System.String)">
            <summary />
        </member>
        <member name="M:Manatee.Trello.Internal.Endpoint.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Manatee.Trello.Internal.Endpoint.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.Internal.Endpoint.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Manatee.Trello.Internal.Endpoint.Method">
            <summary />
        </member>
        <member name="T:Manatee.Trello.Json.IJsonBoardVisibilityRestrict">
            <summary>
            Defines the JSON structure for the BoardVisibilityRestrict object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardVisibilityRestrict.Public">
            <summary>
            Gets or sets the visibility of publicly-visible boards owned by the organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardVisibilityRestrict.Org">
            <summary>
            Gets or sets the visibility of Org-visible boards owned by the organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardVisibilityRestrict.Private">
            <summary>
            Gets or sets the visibility of private boards owned by the organization.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonMemberSession">
            <summary>
            Defines the JSON structure for the MemberSession object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMemberSession.IsCurrent">
            <summary>
            Gets or sets whether this session is active.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMemberSession.IsRecent">
            <summary>
            Gets or sets whether this session has been accessed recently.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMemberSession.Id">
            <summary>
            Gets or sets the ID for this session.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMemberSession.DateCreated">
            <summary>
            Gets or sets the date this session was created.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMemberSession.DateExpires">
            <summary>
            Gets or sets the date this session expires.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMemberSession.DateLastUsed">
            <summary>
            Gets or sets the date this session was last used.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMemberSession.IpAddress">
            <summary>
            Gets or sets the IP address associated with this session.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMemberSession.Type">
            <summary>
            Gets or sets the type of session.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMemberSession.UserAgent">
            <summary>
            Gets or sets the user agent associated with this session.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonOrganizationMembership">
            <summary>
            Defines the JSON structure for the OrganizationMembership object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonOrganizationMembership.Id">
            <summary>
            Gets or sets a unique identifier (not necessarily a GUID).
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonOrganizationMembership.IdMember">
            <summary>
             Gets or sets the ID of the member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonOrganizationMembership.MemberType">
            <summary>
             Gets or sets the membership type.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonOrganizationMembership.Unconfirmed">
            <summary>
             Gets or sets whether the membership is unconfirmed.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonAction">
            <summary>
            Defines the JSON structure for the Action object.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonCacheable">
            <summary>
            Defines properties required for TrelloService to cache an item.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCacheable.Id">
            <summary>
            Gets or sets a unique identifier (not necessarily a GUID).
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonAction.IdMemberCreator">
            <summary>
            Gets or sets the ID of the member who performed the action.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonAction.Data">
            <summary>
            Gets or sets the data associated with the action.  Contents depend upon the action's type.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonAction.Type">
            <summary>
            Gets or sets the action's type.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonAction.Date">
            <summary>
             Gets or sets the date on which the action was performed.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonAttachment">
            <summary>
            Defines the JSON structure for the Attachment object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonAttachment.Bytes">
            <summary>
             Gets or sets the size of the attachment.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonAttachment.Date">
            <summary>
            Gets or sets the date on which the attachment was created.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonAttachment.IdMember">
            <summary>
             Gets or sets the ID of the member who created the attachment.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonAttachment.IsUpload">
            <summary>
             ?
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonAttachment.MimeType">
            <summary>
             Gets or sets the type of attachment.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonAttachment.Name">
            <summary>
             Gets or sets the name of the attachment.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonAttachment.Previews">
            <summary>
             Gets or sets a collection of previews for the attachment.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonAttachment.Url">
            <summary>
             Gets or sets the attachment storage location.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonBadges">
            <summary>
            Defines the JSON structure for the Badges object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBadges.Votes">
            <summary>
            Gets or sets the number of votes.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBadges.ViewingMemberVoted">
            <summary>
            Gets or sets whether the member has voted for this card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBadges.Subscribed">
            <summary>
            Gets or sets whether the member is subscribed to the card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBadges.Fogbugz">
            <summary>
            Gets or sets the FogBugz ID.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBadges.Due">
            <summary>
            Gets or sets the due date, if one exists.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBadges.Description">
            <summary>
            Gets or sets whether the card has a description.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBadges.Comments">
            <summary>
            Gets or sets the number of comments.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBadges.CheckItemsChecked">
            <summary>
            Gets or sets the number of check items which have been checked.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBadges.CheckItems">
            <summary>
            Gets or sets the number of check items.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBadges.Attachments">
            <summary>
             Gets or sets the number of attachments.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonBoard">
            <summary>
            Defines the JSON structure for the Board object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoard.Name">
            <summary>
             Gets or sets the board's name.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoard.Desc">
            <summary>
             Gets or sets the board's description.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoard.Closed">
            <summary>
             Gets or sets whether this board is closed.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoard.IdOrganization">
            <summary>
            Gets or sets the ID of the organization, if any, to which this board belongs.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoard.Pinned">
            <summary>
             Gets or sets whether this board is pinned to the user's Boards menu.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoard.Url">
            <summary>
             Gets or sets the URL for this board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoard.Subscribed">
            <summary>
             Gets or sets whether the user is subscribed to this board.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonBoardMembership">
            <summary>
            Defines the JSON structure for the BoardMembership object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardMembership.Id">
            <summary>
            Gets or sets a unique identifier (not necessarily a GUID).
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardMembership.IdMember">
            <summary>
             Gets or sets the ID of the member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardMembership.MemberType">
            <summary>
             Gets or sets the membership type.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardMembership.Deactivated">
            <summary>
             Gets or sets whether the membership is deactivated.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonBoardPersonalPreferences">
            <summary>
            Defines the JSON structure for the BoardPersonalPreferences object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardPersonalPreferences.ShowSidebar">
            <summary>
             Gets or sets whether the side bar (right side of the screen) is shown
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardPersonalPreferences.ShowSidebarMembers">
            <summary>
             Gets or sets whether the members section of the list of the side bar is shown.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardPersonalPreferences.ShowSidebarBoardActions">
            <summary>
            Gets or sets whether the board actions (Add List/Add Member/Filter Cards) section of the side bar is shown.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardPersonalPreferences.ShowSidebarActivity">
            <summary>
            Gets or sets whether the activity section of the side bar is shown.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardPersonalPreferences.ShowListGuide">
            <summary>
             Gets or sets whether the list guide (left side of the screen) is expanded.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonBoardPreferences">
            <summary>
            Defines the JSON structure for the BoardPreferences object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardPreferences.PermissionLevel">
            <summary>
            Gets or sets who may view the board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardPreferences.Voting">
            <summary>
            Gets or sets who may vote on cards.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardPreferences.Comments">
            <summary>
            Gets or sets who may comment on cards.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardPreferences.Invitations">
            <summary>
            Gets or sets who may extend invitations to join the board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardPreferences.SelfJoin">
            <summary>
            Gets or sets whether any Trello member may join a board without an invitation.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonBoardPreferences.CardCovers">
            <summary>
            Gets or sets whether card covers are shown on the board.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonCard">
            <summary>
            Defines the JSON structure for the Card object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCard.Closed">
            <summary>
            Gets or sets whether a card has been archived.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCard.DateLastActivity">
            <summary>
            Gets or sets the date of last activity for a card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCard.Desc">
            <summary>
            Gets or sets the card's description.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCard.Due">
            <summary>
            Gets or sets the card's due date.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCard.IdBoard">
            <summary>
            Gets or sets the ID of the board which contains the card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCard.IdList">
            <summary>
            Gets or sets the ID of the list which contains the card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCard.IdShort">
            <summary>
            Gets or sets the card's short ID.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCard.IdAttachmentCover">
            <summary>
            Gets or sets the ID of the attachment cover image.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCard.ManualCoverAttachment">
            <summary>
            Gets or sets whether the cover attachment was manually selected
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCard.Name">
            <summary>
            Gets or sets the card's name
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCard.Pos">
            <summary>
            Gets or sets the card's position.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCard.Url">
            <summary>
            Gets or sets the URL for this card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCard.Subscribed">
            <summary>
            Gets or sets whether the current member is subscribed to this card.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonCheckItem">
            <summary>
            Defines the JSON structure for the CheckItem object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCheckItem.State">
            <summary>
            Gets or sets the check state of the checklist item.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCheckItem.Name">
            <summary>
            Gets or sets the name of the checklist item.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCheckItem.Pos">
            <summary>
            Gets or sets the position of the checklist item.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonCheckList">
            <summary>
            Defines the JSON structure for the CheckList object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCheckList.Name">
            <summary>
            Gets or sets the name of this checklist.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCheckList.IdBoard">
            <summary>
            Gets or sets the ID of the board which contains this checklist.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCheckList.IdCard">
            <summary>
            Gets or sets the ID of the card which contains this checklist.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonCheckList.Pos">
            <summary>
            Gets or sets the position of this checklist.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonLabel">
            <summary>
            Defines the JSON structure for the Label object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonLabel.Color">
            <summary>
            Gets and sets the color of the label.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonLabel.Name">
            <summary>
            Gets and sets the name of the label.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonLabelNames">
            <summary>
            Defines the JSON structure for a LabelNames object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonLabelNames.Red">
            <summary>
            Gets and sets the name for the red label.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonLabelNames.Orange">
            <summary>
            Gets and sets the name for the orange label.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonLabelNames.Yellow">
            <summary>
            Gets and sets the name for the yellow label.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonLabelNames.Green">
            <summary>
            Gets and sets the name for the green label.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonLabelNames.Blue">
            <summary>
            Gets and sets the name for the blue label.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonLabelNames.Purple">
            <summary>
            Gets and sets the name for the purple label.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonList">
            <summary>
            Defines the JSON structure for the List object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonList.Name">
            <summary>
            Gets or sets the name of the list.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonList.Closed">
            <summary>
            Gets or sets whether the list is archived.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonList.IdBoard">
            <summary>
            Gets or sets the ID of the board which contains the list.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonList.Pos">
            <summary>
            Gets or sets the position of the list.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonList.Subscribed">
            <summary>
            Gets or sets whether the current member is subscribed to the list.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonMember">
            <summary>
            Defines the JSON structure for the Member object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMember.AvatarHash">
            <summary>
            Gets or sets the member's avatar hash.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMember.Bio">
            <summary>
            Gets or sets the bio of the member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMember.FullName">
            <summary>
            Gets the member's full name.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMember.Initials">
            <summary>
            Gets or sets the member's initials.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMember.MemberType">
            <summary>
            Gets or sets the type of member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMember.Status">
            <summary>
            Gets or sets the member's activity status.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMember.Url">
            <summary>
            Gets or sets the URL to the member's profile.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMember.Username">
            <summary>
            Gets or sets the member's username.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMember.AvatarSource">
            <summary>
            Gets or sets the source URL for the member's avatar.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMember.Confirmed">
            <summary>
            Gets or sets whether the member is confirmed.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMember.Email">
            <summary>
            Gets or sets the member's registered email address.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMember.GravatarHash">
            <summary>
            Gets or sets the member's Gravatar hash.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMember.LoginTypes">
            <summary>
            Gets or sets the login types for the member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMember.Trophies">
            <summary>
            Gets or sets the trophies obtained by the member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMember.UploadedAvatarHash">
            <summary>
            Gets or sets the user's uploaded avatar hash.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMember.OneTimeMessagesDismissed">
            <summary>
            Gets or sets the types of message which are dismissed for the member.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonMemberPreferences">
            <summary>
            Defines the JSON structure for the MemberPreferences object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMemberPreferences.SendSummaries">
            <summary>
            Enables/disables summary emails.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMemberPreferences.MinutesBetweenSummaries">
            <summary>
            Gets or sets the number of minutes between summary emails.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMemberPreferences.MinutesBeforeDeadlineToNotify">
            <summary>
            Gets or sets the number of minutes before a deadline to notify the member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonMemberPreferences.ColorBlind">
            <summary>
            Enables/disables color-blind mode.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonNotification">
            <summary>
            Defines the JSON structure for the Notification object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonNotification.Unread">
            <summary>
            Gets or sets whether the notification has been read.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonNotification.Type">
            <summary>
            Gets or sets the notification's type.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonNotification.Date">
            <summary>
             Gets or sets the date on which the notification was created.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonNotification.Data">
            <summary>
            Gets or sets the data associated with the notification.  Contents depend upon the notification's type.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonNotification.IdMemberCreator">
            <summary>
            Gets or sets the ID of the member whose action spawned the notification.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonOrganization">
            <summary>
            Defines the JSON structure for the Organization object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonOrganization.Name">
            <summary>
            Gets or sets the name of the organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonOrganization.DisplayName">
            <summary>
            Gets or sets the name to be displayed for the organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonOrganization.Desc">
            <summary>
            Gets or sets the description for the organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonOrganization.Url">
            <summary>
            Gets or sets the URL to the organization's profile.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonOrganization.Website">
            <summary>
            Gets or sets the organization's website.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonOrganization.LogoHash">
            <summary>
            Gets or sets the organization's logo hash.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonOrganization.PowerUps">
            <summary>
            Enumerates the powerups obtained by the organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonOrganization.PaidAccount">
            <summary>
            Gets or sets whether the organization is a paid account.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonOrganization.PremiumFeatures">
            <summary>
            Gets or sets a collection of premium features available to the organization.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonOrganizationPreferences">
            <summary>
            Defines the JSON structure for the OrganizationPreferences object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonOrganizationPreferences.PermissionLevel">
            <summary>
            Gets or sets the permission level.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonOrganizationPreferences.OrgInviteRestrict">
            <summary>
            Gets or sets organization invitation restrictions.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonOrganizationPreferences.ExternalMembersDisabled">
            <summary>
            Gets or sets whether external members are disabled.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonOrganizationPreferences.AssociatedDomain">
            <summary>
            Gets or sets the Google Apps domain.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonOrganizationPreferences.BoardVisibilityRestrict">
            <summary>
            Gets or sets the visibility of boards owned by the organization.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonToken">
            <summary>
            Defines the JSON structure for the Token object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonToken.Id">
            <summary>
            Gets or sets the ID of the token.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonToken.Identifier">
            <summary>
            Gets or sets the identifier of the application which requested the token.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonToken.IdMember">
            <summary>
            Gets or sets the ID of the member who issued the token.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonToken.DateCreated">
            <summary>
            Gets or sets the date the token was created.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonToken.DateExpires">
            <summary>
            Gets or sets the date the token will expire, if any.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonToken.Permissions">
            <summary>
            Gets or sets the collection of permissions granted by the token.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonWebhook">
            <summary>
            Defines the JSON structure for the Webhook object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonWebhook.Description">
            <summary>
            Gets or sets the description of the webhook.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonWebhook.IdModel">
            <summary>
            Gets or sets the ID of the entity which the webhook monitors.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonWebhook.CallbackUrl">
            <summary>
            Gets or sets the URL which receives notification messages.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonWebhook.Active">
            <summary>
            Gets or sets whether the webhook is active.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Internal.RequestProcessing.IOfflineChangeQueue">
            <summary>
            Defines methods required to track and process offline changes.
            </summary>
            <remarks>
            This interface is only exposed for unit testing purposes.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.Internal.RequestProcessing.IOfflineChangeQueue.Enqueue(Manatee.Trello.Contracts.ExpiringObject,Manatee.Trello.Internal.Endpoint,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary />
        </member>
        <member name="M:Manatee.Trello.Internal.RequestProcessing.IOfflineChangeQueue.Requeue(System.Collections.Generic.IEnumerable{Manatee.Trello.Internal.RequestProcessing.OfflineChange})">
            <summary />
        </member>
        <member name="M:Manatee.Trello.Internal.RequestProcessing.IOfflineChangeQueue.Dequeue">
            <summary />
        </member>
        <member name="M:Manatee.Trello.Internal.RequestProcessing.IOfflineChangeQueue.ResolveId(System.String,System.String)">
            <summary />
        </member>
        <member name="T:Manatee.Trello.Internal.RequestProcessing.IRequestQueue">
            <summary>
            Defines methods required to manage REST requests in a queue.
            </summary>
            <remarks>
            This interface is only exposed for unit testing purposes.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.Internal.RequestProcessing.IRequestQueue.Enqueue``1(Manatee.Trello.Rest.IRestRequest)">
            <summary />
        </member>
        <member name="M:Manatee.Trello.Internal.RequestProcessing.IRequestQueue.DequeueAndExecute(Manatee.Trello.Rest.IRestClient)">
            <summary />
        </member>
        <member name="P:Manatee.Trello.Internal.RequestProcessing.IRequestQueue.Count">
            <summary />
        </member>
        <member name="T:Manatee.Trello.Internal.RequestProcessing.INetworkMonitor">
            <summary>
            Defines properties and methods used to monitor network connectivity.
            </summary>
            <remarks>
            This interface is only exposed for unit testing purposes.
            </remarks>
        </member>
        <member name="P:Manatee.Trello.Internal.RequestProcessing.INetworkMonitor.IsConnected">
            <summary />
        </member>
        <member name="E:Manatee.Trello.Internal.RequestProcessing.INetworkMonitor.ConnectionStatusChanged">
            <summary />
        </member>
        <member name="T:Manatee.Trello.Internal.RequestProcessing.IRestRequestProcessor">
            <summary>
            Processes REST requests as they appear on the queue.
            </summary>
            <remarks>
            This interface is only exposed for unit testing purposes.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.Internal.RequestProcessing.IRestRequestProcessor.AddRequest``1(Manatee.Trello.Rest.IRestRequest)">
            <summary />
        </member>
        <member name="M:Manatee.Trello.Internal.RequestProcessing.IRestRequestProcessor.ShutDown">
            <summary />
        </member>
        <member name="M:Manatee.Trello.Internal.RequestProcessing.IRestRequestProcessor.NetworkStatusChanged(System.Object,System.EventArgs)">
            <summary />
        </member>
        <member name="P:Manatee.Trello.Internal.RequestProcessing.IRestRequestProcessor.IsActive">
            <summary />
        </member>
        <member name="P:Manatee.Trello.Internal.RequestProcessing.IRestRequestProcessor.AppKey">
            <summary />
        </member>
        <member name="P:Manatee.Trello.Internal.RequestProcessing.IRestRequestProcessor.UserToken">
            <summary />
        </member>
        <member name="T:Manatee.Trello.Internal.RequestProcessing.OfflineChange">
            <summary>
            Defines a single offline change.
            </summary>
            <remarks>
            This class is only exposed for unit testing purposes.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.Internal.RequestProcessing.OfflineChange.#ctor(Manatee.Trello.Contracts.ExpiringObject,Manatee.Trello.Internal.Endpoint,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary />
        </member>
        <member name="P:Manatee.Trello.Internal.RequestProcessing.OfflineChange.Parameters">
            <summary />
        </member>
        <member name="P:Manatee.Trello.Internal.RequestProcessing.OfflineChange.Entity">
            <summary />
        </member>
        <member name="P:Manatee.Trello.Internal.RequestProcessing.OfflineChange.Endpoint">
            <summary />
        </member>
        <member name="T:Manatee.Trello.Contracts.ITrelloServiceConfiguration">
            <summary>
            Defines a set of run-time options for Manatee.Trello.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Contracts.ITrelloServiceConfiguration.ItemDuration">
            <summary>
            Gets and sets the global duration setting for all auto-refreshing objects.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Contracts.ITrelloServiceConfiguration.Serializer">
            <summary>
            Specifies the serializer which is used the first time a request is made from
            a given instance of the TrelloService class.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Contracts.ITrelloServiceConfiguration.Deserializer">
            <summary>
            Specifies the deserializer which is used the first time a request is made from
            a given instance of the TrelloService class.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Contracts.ITrelloServiceConfiguration.RestClientProvider">
            <summary>
            Specifies the REST client provider which is used the first time a request is made from
            a given instance of the TrelloService class.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Contracts.ITrelloServiceConfiguration.Cache">
            <summary>
            Provides a single cache for all TrelloService instances.  This can be overridden per instance.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Contracts.ITrelloServiceConfiguration.Log">
            <summary>
            Provides logging for all of Manatee.Trello.  The default log only writes to the Debug window.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonWebhookNotification">
            <summary>
            Defines the JSON structure for the WebhookNotification object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonWebhookNotification.Action">
            <summary>
            Gets or sets the action associated with the notification.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Member">
            <summary>
            Represents a member (user).
            </summary>
        </member>
        <member name="M:Manatee.Trello.Member.#ctor">
            <summary>
            Creates a new instance of the Member class.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Member.Equals(Manatee.Trello.Member)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Manatee.Trello.Member.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The object to compare with the current object. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.Member.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.Member.CompareTo(Manatee.Trello.Member)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <returns>
            A value that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the <paramref name="other"/> parameter.Zero This object is equal to <paramref name="other"/>. Greater than zero This object is greater than <paramref name="other"/>. 
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Manatee.Trello.Member.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.Member.Refresh">
            <summary>
            Retrieves updated data from the service instance and refreshes the object.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Member.Manatee#Trello#Internal#ICanWebhook#ApplyAction(Manatee.Trello.Action)">
            <summary>
            Applies the changes an action represents.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="P:Manatee.Trello.Member.Actions">
            <summary>
             Enumerates all actions associated with this member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Member.AvatarHash">
            <summary>
            Gets the member's avatar hash.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Member.AvatarSource">
            <summary>
            Gets or sets the source URL for the member's avatar.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Member.Bio">
            <summary>
            Gets or sets the bio of the member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Member.Boards">
            <summary>
            Enumerates the boards owned by the member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Member.Confirmed">
            <summary>
            Gets whether the member is confirmed.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Member.Email">
            <summary>
            Gets the member's registered email address.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Member.FullName">
            <summary>
            Gets the member's full name.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Member.GravatarHash">
            <summary>
            Gets the member's Gravatar hash.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Member.Id">
            <summary>
            Gets a unique identifier (not necessarily a GUID).
            </summary>
        </member>
        <member name="P:Manatee.Trello.Member.Initials">
            <summary>
            Gets or sets the member's initials.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Member.InvitedBoards">
            <summary>
            Enumerates the boards to which the member has been invited to join.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Member.InvitedOrganizations">
            <summary>
            Enumerates the organizations to which the member has been invited to join.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Member.LoginTypes">
            <summary>
            Enumerates the login types for the member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Member.MemberType">
            <summary>
            Gets the type of member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Member.OneTimeMessagesDismissed">
            <summary>
            Enumerates the types of messages automatically dismissed for the user.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Member.Organizations">
            <summary>
            Enumerates the organizations to which the member belongs.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Member.Status">
            <summary>
            Gets the member's activity status.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Member.Trophies">
            <summary>
            Enumerates the trophies obtained by the member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Member.UploadedAvatarHash">
            <summary>
            Gets the user's uploaded avatar hash.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Member.Url">
            <summary>
            Gets the URL to the member's profile.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Member.Username">
            <summary>
            Gets or sets the member's username.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Member.IsStubbed">
            <summary>
            Gets whether this entity represents an actual entity on Trello.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Me.ClearNotifications">
            <summary>
            Marks all unread notifications for the member as read.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Me.CreateBoard(System.String)">
            <summary>
            Creates a personal board for the current member.
            </summary>
            <param name="name">The name of the board.</param>
            <returns>The newly-created Board object.</returns>
        </member>
        <member name="M:Manatee.Trello.Me.CreateOrganization(System.String)">
            <summary>
            Creates an organization administered by the current member.
            </summary>
            <param name="displayName">The display name of the organization.</param>
            <returns>The newly-created Organization object.</returns>
        </member>
        <member name="M:Manatee.Trello.Me.PinBoard(Manatee.Trello.Board)">
            <summary>
            Adds a board to the member's boards menu.
            </summary>
            <param name="board">The board to pin.</param>
        </member>
        <member name="M:Manatee.Trello.Me.RescindVoteForCard(Manatee.Trello.Card)">
            <summary>
            Removes the member's vote from a card.
            </summary>
            <param name="card"></param>
        </member>
        <member name="M:Manatee.Trello.Me.UnpinBoard(Manatee.Trello.Board)">
            <summary>
            Removes a board from the member's boards menu.
            </summary>
            <param name="board"></param>
        </member>
        <member name="M:Manatee.Trello.Me.VoteForCard(Manatee.Trello.Card)">
            <summary>
            Applies the member's vote to a card.
            </summary>
            <param name="card"></param>
        </member>
        <member name="P:Manatee.Trello.Me.Bio">
            <summary>
            Gets or sets the bio of the member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Me.Email">
            <summary>
            Gets the member's registered email address.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Me.FullName">
            <summary>
            Gets the member's full name.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Me.Initials">
            <summary>
            Gets or sets the member's initials.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Me.Notifications">
            <summary>
            Enumerates the member's notifications.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Me.OneTimeMessagesDismissed">
            <summary>
            Enumerates the types of messages automatically dismissed for the user.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Me.StarredBoards">
            <summary>
            Enumerates the boards the member has starred in their boards menu.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Me.Preferences">
            <summary>
             Gets the set of preferences for the member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Me.Sessions">
            <summary>
            Enumerates the active sessions with trello.com.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Me.Tokens">
            <summary>
            Enumerates the tokens provided by the member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Me.Username">
            <summary>
            Gets or sets the member's username.
            </summary>
        </member>
        <member name="T:Manatee.Trello.MemberSession">
            <summary>
            Represents a web session currently active by a member.
            </summary>
        </member>
        <member name="M:Manatee.Trello.MemberSession.#ctor">
            <summary>
            Creates a new instance of the MemberSession class.
            </summary>
        </member>
        <member name="M:Manatee.Trello.MemberSession.Equals(Manatee.Trello.MemberSession)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Manatee.Trello.MemberSession.CompareTo(Manatee.Trello.MemberSession)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <returns>
            A value that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the <paramref name="other"/> parameter.Zero This object is equal to <paramref name="other"/>. Greater than zero This object is greater than <paramref name="other"/>. 
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Manatee.Trello.MemberSession.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The object to compare with the current object. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.MemberSession.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.MemberSession.Refresh">
            <summary>
            Retrieves updated data from the service instance and refreshes the object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.MemberSession.DateCreated">
            <summary>
             Gets the date this session was created.
            </summary>
        </member>
        <member name="P:Manatee.Trello.MemberSession.DateExpires">
            <summary>
             Gets the date this session was created.
            </summary>
        </member>
        <member name="P:Manatee.Trello.MemberSession.DateLastUsed">
            <summary>
             Gets the date this session was created.
            </summary>
        </member>
        <member name="P:Manatee.Trello.MemberSession.Id">
            <summary>
            Gets a unique identifier (not necessarily a GUID).
            </summary>
        </member>
        <member name="P:Manatee.Trello.MemberSession.IpAddress">
            <summary>
            Gets the IP Address associated with the session.
            </summary>
        </member>
        <member name="P:Manatee.Trello.MemberSession.IsCurrent">
            <summary>
            Gets whether the session is the currently active session.
            </summary>
        </member>
        <member name="P:Manatee.Trello.MemberSession.IsRecent">
            <summary>
            Gets whether the session has been used recently.
            </summary>
        </member>
        <member name="P:Manatee.Trello.MemberSession.Type">
            <summary>
            Gets the type of login used to create the session.
            </summary>
        </member>
        <member name="P:Manatee.Trello.MemberSession.UserAgent">
            <summary>
            Gets the interface used to create the session.  This is typically browser information.
            </summary>
        </member>
        <member name="P:Manatee.Trello.MemberSession.IsStubbed">
            <summary>
            Gets whether this entity represents an actual entity on Trello.
            </summary>
        </member>
        <member name="T:Manatee.Trello.ModelScope`1">
            <summary>
            Represents the scope of a user token for a given model type.
            </summary>
            <typeparam name="T">The type of the model.</typeparam>
        </member>
        <member name="M:Manatee.Trello.ModelScope`1.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Manatee.Trello.ModelScope`1.All">
            <summary>
            Defines global access to a particular model type.
            </summary>
        </member>
        <member name="P:Manatee.Trello.ModelScope`1.Model">
            <summary>
            Gets the model entity.
            </summary>
        </member>
        <member name="T:Manatee.Trello.OrganizationMembership">
            <summary>
            Represents a membership of an Organization.
            </summary>
        </member>
        <member name="M:Manatee.Trello.OrganizationMembership.#ctor">
            <summary>
            Creates a new instance of the OrganizationMembership class.
            </summary>
        </member>
        <member name="M:Manatee.Trello.OrganizationMembership.Equals(Manatee.Trello.OrganizationMembership)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Manatee.Trello.OrganizationMembership.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The object to compare with the current object. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.OrganizationMembership.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.OrganizationMembership.CompareTo(Manatee.Trello.OrganizationMembership)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <returns>
            A value that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the <paramref name="other"/> parameter.Zero This object is equal to <paramref name="other"/>. Greater than zero This object is greater than <paramref name="other"/>. 
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Manatee.Trello.OrganizationMembership.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.OrganizationMembership.Refresh">
            <summary>
            Retrieves updated data from the service instance and refreshes the object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.OrganizationMembership.Id">
            <summary>
            Gets a unique identifier (not necessarily a GUID).
            </summary>
        </member>
        <member name="P:Manatee.Trello.OrganizationMembership.IsUnconfirmed">
            <summary>
             Gets whether the membership is unconfirmed.
            </summary>
        </member>
        <member name="P:Manatee.Trello.OrganizationMembership.Member">
            <summary>
             Gets the member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.OrganizationMembership.MembershipType">
            <summary>
             Gets the membership type.
            </summary>
        </member>
        <member name="P:Manatee.Trello.OrganizationMembership.IsStubbed">
            <summary>
            Gets whether this entity represents an actual entity on Trello.
            </summary>
        </member>
        <member name="T:Manatee.Trello.TokenPermission">
            <summary>
            Non-generic base class to hold static members.  Performs no other function.
            </summary>
        </member>
        <member name="T:Manatee.Trello.TokenPermission`1">
            <summary>
            Represents permissions granted to a particular entity type by a user token.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Manatee.Trello.TokenPermission`1.CanRead">
            <summary>
            Gets whether read access is granted by a token.
            </summary>
        </member>
        <member name="P:Manatee.Trello.TokenPermission`1.CanWrite">
            <summary>
            Gets whether write access is granted by a token.
            </summary>
        </member>
        <member name="P:Manatee.Trello.TokenPermission`1.ModelType">
            <summary>
            Gets the type of the model.
            </summary>
        </member>
        <member name="P:Manatee.Trello.TokenPermission`1.Scope">
            <summary>
            Gets the model, if well-defined, to which a token grants permissions.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonActionData">
            <summary>
            Defines the JSON structure for the ActionData object.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Json.IJsonActionData.TryGetString(System.String[])">
            <summary>
            Attempts to retrieve a string from an object.
            </summary>
            <param name="path">
            The set of successive keys to use while drilling down
            through successive JSON object structures.
            </param>
            <returns>
            The string value of the item at the specified path,
            or null if the path does not exist.
            </returns>
        </member>
        <member name="M:Manatee.Trello.Json.IJsonActionData.TryGetNumber(System.String[])">
            <summary>
            Attempts to retrieve a number from an object.
            </summary>
            <param name="path">
            The set of successive keys to use while drilling down
            through successive JSON object structures.
            </param>
            <returns>
            The number value of the item at the specified path,
            or null if the path does not exist.
            </returns>
        </member>
        <member name="M:Manatee.Trello.Json.IJsonActionData.TryGetBoolean(System.String[])">
            <summary>
            Attempts to retrieve a boolean from an object.
            </summary>
            <param name="path">
            The set of successive keys to use while drilling down
            through successive JSON object structures.
            </param>
            <returns>
            The boolean value of the item at the specified path,
            or null if the path does not exist.
            </returns>
        </member>
        <member name="M:Manatee.Trello.Json.IJsonActionData.TryGetAttachment(System.String[])">
            <summary>
            Attempts to retrieve the JSON data to represent an attachment from an object.
            </summary>
            <param name="path">
            The set of successive keys to use while drilling down
            through successive JSON object structures.
            </param>
            <returns>
            The IJsonAttachment value of the item at the specified path,
            or null if the path does not exist.
            </returns>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonActionData.RawData">
            <summary>
            Contains the raw JSON data.  The type of this object will be determined
            by the JSON serializer implementation.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonAttachmentPreview">
            <summary>
            Defines the JSON structure for the AttachmentPreview object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonAttachmentPreview.Width">
            <summary>
             Gets or sets the width in pixels of the attachment preview.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonAttachmentPreview.Height">
            <summary>
             Gets or sets the height in pixels of the attachment preview.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonAttachmentPreview.Url">
            <summary>
             Gets or sets the attachment storage location.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonAttachmentPreview.Id">
            <summary>
             Gets or sets the ID of the attachment preview.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonNotificationData">
            <summary>
            Defines the JSON structure for the NotificationData object.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Json.IJsonNotificationData.TryGetString(System.String[])">
            <summary>
            Attempts to retrieve a string from an object.
            </summary>
            <param name="path">
            The set of successive keys to use while drilling down
            through successive JSON object structures.
            </param>
            <returns>
            The string value of the item at the specified path,
            or null if the path does not exist.
            </returns>
        </member>
        <member name="M:Manatee.Trello.Json.IJsonNotificationData.TryGetNumber(System.String[])">
            <summary>
            Attempts to retrieve a number from an object.
            </summary>
            <param name="path">
            The set of successive keys to use while drilling down
            through successive JSON object structures.
            </param>
            <returns>
            The number value of the item at the specified path,
            or null if the path does not exist.
            </returns>
        </member>
        <member name="M:Manatee.Trello.Json.IJsonNotificationData.TryGetBoolean(System.String[])">
            <summary>
            Attempts to retrieve a boolean from an object.
            </summary>
            <param name="path">
            The set of successive keys to use while drilling down
            through successive JSON object structures.
            </param>
            <returns>
            The boolean value of the item at the specified path,
            or null if the path does not exist.
            </returns>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonNotificationData.RawData">
            <summary>
            Contains the raw JSON data.  The type of this object will be determined
            by the JSON serializer implementation.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Contracts.ITrelloService">
            <summary>
            Defines methods required to retrieve entities from Trello.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Contracts.ITrelloService.Retrieve``1(System.String)">
            <summary>
            Retrieves an entity from Trello.
            </summary>
            <typeparam name="T">The type of entity to retrieve.</typeparam>
            <param name="id">The ID of the entity.</param>
            <returns>The entity which corresponds to the ID, or null if not found.</returns>
        </member>
        <member name="M:Manatee.Trello.Contracts.ITrelloService.Search(System.String,System.Collections.Generic.List{Manatee.Trello.Contracts.ExpiringObject},Manatee.Trello.SearchModelType)">
            <summary>
            Searches actions, boards, cards, members and organizations for a provided
            query string.
            </summary>
            <param name="query">The query string.</param>
            <param name="context">The items in which to perform the search.</param>
            <param name="modelTypes">The model types to return.  Can be combined using the '|' operator.</param>
            <returns>An object which contains the results of the query.</returns>
        </member>
        <member name="M:Manatee.Trello.Contracts.ITrelloService.SearchMembers(System.String,System.Int32)">
            <summary>
            Searches for members whose names or usernames match a provided query string.
            </summary>
            <param name="query">The query string.</param>
            <param name="limit">The maximum number of results to return.</param>
            <returns>A collection of members.</returns>
        </member>
        <member name="M:Manatee.Trello.Contracts.ITrelloService.HoldRequests">
            <summary>
            Instructs the service to stop sending requests.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Contracts.ITrelloService.ResumeRequests">
            <summary>
            Instructs the service to continue sending requests.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Contracts.ITrelloService.ProcessWebhookNotification(System.String)">
            <summary>
            Processes a received webhook notification.
            </summary>
            <param name="body"></param>
        </member>
        <member name="P:Manatee.Trello.Contracts.ITrelloService.UserToken">
            <summary>
            Gets and sets the UserToken for the service.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Contracts.ITrelloService.Me">
            <summary>
            Gets the Member object associated with the provided UserToken.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Contracts.ITrelloService.AllowSelfUpdate">
            <summary>
            Gets or sets whether entities are allowed to update themselves.  A value of false implies that
            updates will be performed via webhook notifications or manually.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Exceptions.OrgNameInUseException">
            <summary>
            Thrown when an attempt is made to set an organization's name to a name which
            already belongs to an existing organization on Trello.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Exceptions.OrgNameInUseException.#ctor(System.String)">
            <summary>
            Creates a new instance of the OrgNameInUseException
            </summary>
            <param name="name">The name which is in use.</param>
        </member>
        <member name="P:Manatee.Trello.Exceptions.OrgNameInUseException.Name">
            <summary>
            The name which is already in use.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Exceptions.ReadOnlyAccessException">
            <summary>
            Thrown when attempting to access write operations without a valid UserToken.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Exceptions.ReadOnlyAccessException.#ctor">
            <summary>
            Creates a new instance of the ReadOnlyAccessException class.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Exceptions.ReadOnlyAccessException.#ctor(System.String)">
            <summary>
            Creates a new instance of the ReadOnlyAccessException class with a custom message.
            </summary>
            <param name="message">A message.</param>
        </member>
        <member name="T:Manatee.Trello.Exceptions.UsernameInUseException">
            <summary>
            Thrown when an attempt is made to set a member's username to a username
            which already belongs to an existing member on Trello.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Exceptions.UsernameInUseException.#ctor(System.String)">
            <summary>
            Creates a new instance of the OrgNameInUseException
            </summary>
            <param name="username">The username which is in use.</param>
        </member>
        <member name="P:Manatee.Trello.Exceptions.UsernameInUseException.Username">
            <summary>
            The username which is already in use.
            </summary>
        </member>
        <member name="T:Manatee.Trello.BoardExtensions">
            <summary>
            Exposes extension methods for the Board entity.
            </summary>
        </member>
        <member name="M:Manatee.Trello.BoardExtensions.ActionsByMember(Manatee.Trello.Board,Manatee.Trello.Member)">
            <summary>
            Retrieves all actions on a board or its contents performed by a specified member.
            </summary>
            <param name="board">The board.</param>
            <param name="member">The member.</param>
            <returns>A collection of actions.</returns>
        </member>
        <member name="M:Manatee.Trello.BoardExtensions.Admins(Manatee.Trello.Board)">
            <summary>
            Retrieves all members of the board who have Admin privileges.
            </summary>
            <param name="board">The board.</param>
            <returns>A collection of members.</returns>
        </member>
        <member name="M:Manatee.Trello.BoardExtensions.AllCards(Manatee.Trello.Board)">
            <summary>
            Retrieves all cards contained within a board, both archived and active.
            </summary>
            <param name="board">The board.</param>
            <returns>A collection of cards.</returns>
        </member>
        <member name="M:Manatee.Trello.BoardExtensions.AllLists(Manatee.Trello.Board)">
            <summary>
            Retrieves all lists contained within a board, both archived and active.
            </summary>
            <param name="board">The board.</param>
            <returns>A collection of lists.</returns>
        </member>
        <member name="M:Manatee.Trello.BoardExtensions.Cards(Manatee.Trello.Board)">
            <summary>
            Retrieves all active cards contained within a board.
            </summary>
            <param name="board">The board.</param>
            <returns>A collection of cards.</returns>
        </member>
        <member name="M:Manatee.Trello.BoardExtensions.CardsAssignedToMember(Manatee.Trello.Board,Manatee.Trello.Member)">
            <summary>
            Retrieves all active cards contained within a board which are assigned to a specified member.
            </summary>
            <param name="board">The board.</param>
            <param name="member">The member.</param>
            <returns>A collection of cards.</returns>
        </member>
        <member name="M:Manatee.Trello.BoardExtensions.CardsDueSoon(Manatee.Trello.Board,System.TimeSpan)">
            <summary>
            Retrieves all active cards within a board with due dates within a specified time span of DateTime.Now.
            </summary>
            <param name="board">The board.</param>
            <param name="timeSpan">The time span.</param>
            <returns>A collection of cards.</returns>
        </member>
        <member name="M:Manatee.Trello.BoardExtensions.CardsMatching(Manatee.Trello.Board,System.Text.RegularExpressions.Regex)">
            <summary>
            Retrieves all active cards within a board with names or descriptions which match a specified Regex.
            </summary>
            <param name="board">The board.</param>
            <param name="regex">The Regex.</param>
            <returns>A collection of cards.</returns>
            <remarks>Description matching does not account for Markdown syntax.</remarks>
        </member>
        <member name="M:Manatee.Trello.BoardExtensions.CardsWithLabel(Manatee.Trello.Board,Manatee.Trello.LabelColor)">
            <summary>
            Retrieves all active cards within a board with names or descriptions which have a specified label color applied.
            </summary>
            <param name="board">The board.</param>
            <param name="color">The label color.</param>
            <returns>A collection of cards.</returns>
        </member>
        <member name="T:Manatee.Trello.CardExtensions">
            <summary>
            Exposes extension methods for the Card entity.
            </summary>
        </member>
        <member name="M:Manatee.Trello.CardExtensions.ActionsByMember(Manatee.Trello.Card,Manatee.Trello.Member)">
            <summary>
            Retrieves all actions performed on a card by a specified member.
            </summary>
            <param name="card">The card</param>
            <param name="member">The member</param>
            <returns>A collection of actions.</returns>
        </member>
        <member name="M:Manatee.Trello.CardExtensions.AllCheckItems(Manatee.Trello.Card)">
            <summary>
            Retrieves all checklist items contained within a card.
            </summary>
            <param name="card">The card</param>
            <returns>A collection of checklist items.</returns>
        </member>
        <member name="M:Manatee.Trello.CardExtensions.CompleteCheckItems(Manatee.Trello.Card)">
            <summary>
            Retrieves all completed checklist items contained within a card.
            </summary>
            <param name="card">The card</param>
            <returns>A collection of checklist items.</returns>
        </member>
        <member name="M:Manatee.Trello.CardExtensions.IncompleteCheckItems(Manatee.Trello.Card)">
            <summary>
            Retrieves all incomplete checklist items contained within a card.
            </summary>
            <param name="card">The card</param>
            <returns>A collection of checklist items.</returns>
        </member>
        <member name="T:Manatee.Trello.ListExtensions">
            <summary>
            Exposes extension methods for the List entity.
            </summary>
        </member>
        <member name="M:Manatee.Trello.ListExtensions.ActionsByMember(Manatee.Trello.List,Manatee.Trello.Member)">
            <summary>
            Retrieves all actions on a list or its contents performed by a specified member.
            </summary>
            <param name="list">The list.</param>
            <param name="member">The member.</param>
            <returns>A collection of actions.</returns>
        </member>
        <member name="M:Manatee.Trello.ListExtensions.CardsAssignedToMember(Manatee.Trello.List,Manatee.Trello.Member)">
            <summary>
            Retrieves all active cards contained within a list which are assigned to a specified member.
            </summary>
            <param name="list">The list.</param>
            <param name="member">The member.</param>
            <returns>A collection of cards.</returns>
        </member>
        <member name="M:Manatee.Trello.ListExtensions.CardsDueSoon(Manatee.Trello.List,System.TimeSpan)">
            <summary>
            Retrieves all active cards within a list with due dates within a specified time span of DateTime.Now.
            </summary>
            <param name="list">The list.</param>
            <param name="timeSpan">The time span.</param>
            <returns>A collection of cards.</returns>
        </member>
        <member name="M:Manatee.Trello.ListExtensions.CardsMatching(Manatee.Trello.List,System.Text.RegularExpressions.Regex)">
            <summary>
            Retrieves all active cards within a list with names or descriptions which match a specified Regex.
            </summary>
            <param name="list">The list.</param>
            <param name="regex">The Regex.</param>
            <returns>A collection of cards.</returns>
            <remarks>Description matching does not account for Markdown syntax.</remarks>
        </member>
        <member name="M:Manatee.Trello.ListExtensions.CardsContaining(Manatee.Trello.List,System.String)">
            <summary>
            Retrieves all active cards within a list with names or descriptions which contain a specified string.
            </summary>
            <param name="list">The list.</param>
            <param name="search">The string.</param>
            <returns>A collection of cards.</returns>
            <remarks>Description searching does not account for Markdown syntax.</remarks>
        </member>
        <member name="M:Manatee.Trello.ListExtensions.CardsWithLabel(Manatee.Trello.List,Manatee.Trello.LabelColor)">
            <summary>
            Retrieves all active cards within a list with names or descriptions which have a specified label color applied.
            </summary>
            <param name="list">The list.</param>
            <param name="color">The label color.</param>
            <returns>A collection of cards.</returns>
        </member>
        <member name="T:Manatee.Trello.MemberExtensions">
            <summary>
            Exposes extension methods for the Member entity.
            </summary>
        </member>
        <member name="M:Manatee.Trello.MemberExtensions.AllCards(Manatee.Trello.Member)">
            <summary>
            Retrieves all cards assigned to a member, both archived and active.
            </summary>
            <param name="member">The member</param>
            <returns>A collection of cards.</returns>
        </member>
        <member name="M:Manatee.Trello.MemberExtensions.ActiveCards(Manatee.Trello.Member)">
            <summary>
            Retrieves all active cards assigned to a member.
            </summary>
            <param name="member">The member.</param>
            <returns>A collection of cards.</returns>
        </member>
        <member name="M:Manatee.Trello.MemberExtensions.PersonalBoards(Manatee.Trello.Member)">
            <summary>
            Returns only the boards which are owned by a member.
            </summary>
            <param name="member">The member.</param>
            <returns>A collection of boards.</returns>
        </member>
        <member name="M:Manatee.Trello.MemberExtensions.CardsDueSoon(Manatee.Trello.Member,System.TimeSpan)">
            <summary>
            Retrieves all active cards assigned to a member with due dates within a specified time span of DateTime.Now.
            </summary>
            <param name="member">The member.</param>
            <param name="timeSpan">The time span.</param>
            <returns>A collection of cards.</returns>
        </member>
        <member name="M:Manatee.Trello.MemberExtensions.CardsMatching(Manatee.Trello.Member,System.Text.RegularExpressions.Regex)">
            <summary>
            Retrieves all active cards assigned to a member with names or descriptions which match a specified Regex.
            </summary>
            <param name="member">The member.</param>
            <param name="regex">The Regex.</param>
            <returns>A collection of cards.</returns>
            <remarks>Description matching does not account for Markdown syntax.</remarks>
        </member>
        <member name="T:Manatee.Trello.OrganizationExtensions">
            <summary>
            Exposes extension methods for the Organization entity.
            </summary>
        </member>
        <member name="M:Manatee.Trello.OrganizationExtensions.CardsAssignedToMember(Manatee.Trello.Organization,Manatee.Trello.Member)">
            <summary>
            Retrieves all active cards contained within a organization which are assigned to a specified member.
            </summary>
            <param name="organization">The organization.</param>
            <param name="member">The member.</param>
            <returns>A collection of cards.</returns>
        </member>
        <member name="M:Manatee.Trello.OrganizationExtensions.CardsDueSoon(Manatee.Trello.Organization,System.TimeSpan)">
            <summary>
            Retrieves all active cards within a organization with due dates within a specified time span of DateTime.Now.
            </summary>
            <param name="organization">The organization.</param>
            <param name="timeSpan">The time span.</param>
            <returns>A collection of cards.</returns>
        </member>
        <member name="M:Manatee.Trello.OrganizationExtensions.CardsMatching(Manatee.Trello.Organization,System.Text.RegularExpressions.Regex)">
            <summary>
            Retrieves all active cards within a organization with names or descriptions which match a specified Regex.
            </summary>
            <param name="organization">The organization.</param>
            <param name="regex">The Regex.</param>
            <returns>A collection of cards.</returns>
            <remarks>Description matching does not account for Markdown syntax.</remarks>
        </member>
        <member name="M:Manatee.Trello.OrganizationExtensions.CardsContaining(Manatee.Trello.Organization,System.String)">
            <summary>
            Retrieves all active cards within a organization with names or descriptions which contain a specified string.
            </summary>
            <param name="organization">The organization.</param>
            <param name="search">The string.</param>
            <returns>A collection of cards.</returns>
            <remarks>Description searching does not account for Markdown syntax.</remarks>
        </member>
        <member name="T:Manatee.Trello.Internal.DataAccess.IJsonRepository">
            <summary>
            Defines methods required to retrieve entities from Trello.
            </summary>
            <remarks>
            This interface is only exposed for unit testing purposes.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.Internal.DataAccess.IJsonRepository.Execute``1(Manatee.Trello.Internal.Endpoint,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary />
        </member>
        <member name="T:Manatee.Trello.ActionType">
            <summary>
             Enumerates known types of Actions.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.Unknown">
            <summary>
            Not recognized.  May have been created since the current version of this API.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.AddAttachmentToCard">
            <summary>
            Indicates an attachment was added to a card.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.AddChecklistToCard">
            <summary>
            Indicates a checklist was added to a card.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.AddMemberToBoard">
            <summary>
            Indicates a member was added to a board.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.AddMemberToCard">
            <summary>
            Indicates a member was added to a card.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.AddMemberToOrganization">
            <summary>
            Indicates a member was added to an organization.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.AddToOrganizationBoard">
            <summary>
            Indicates a organization was added to a board.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.CommentCard">
            <summary>
            Indicates a comment was added to a card.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.CopyCommentCard">
            <summary>
            Indicates a comment was copied from one card to another.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.ConvertToCardFromCheckItem">
            <summary>
            Indicates a checklist item was converted to card.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.CopyBoard">
            <summary>
            Indicates a board was copied.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.CopyCard">
            <summary>
            Indicates a card was copied.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.CreateBoard">
            <summary>
            Indicates a board was created.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.CreateCard">
            <summary>
            Indicates a card was created.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.CreateList">
            <summary>
            Indicates a list was created.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.CreateOrganization">
            <summary>
            Indicates an organization was created.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.DeleteAttachmentFromCard">
            <summary>
            Indicates an attachment was deleted from a card.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.DeleteBoardInvitation">
            <summary>
            Indicates an invitation to a board was rescinded.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.DeleteCard">
            <summary>
            Indicates a card was deleted.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.DeleteOrganizationInvitation">
            <summary>
            Indicates an invitation to an organization was rescinded.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.MakeAdminOfBoard">
            <summary>
            Indicates a member was made an admin of a board.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.MakeNormalMemberOfBoard">
            <summary>
            Indicates a member was made a normal member of a board.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.MakeNormalMemberOfOrganization">
            <summary>
            Indicates a member was made a normal member of an organization.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.MakeObserverOfBoard">
            <summary>
            Indicates a member was made an observer of a board.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.MemberJoinedTrello">
            <summary>
            Indicates a member joined Trello.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.MoveCardFromBoard">
            <summary>
            Indicates a card was moved from one board to another.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.MoveListFromBoard">
            <summary>
            Indicates a list was moved from one board to another.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.MoveCardToBoard">
            <summary>
            Indicates a card was moved from one board to another.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.MoveListToBoard">
            <summary>
            Indicates a list was moved from one board to another.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.RemoveAdminFromBoard">
            <summary>
            Indicates an admin member was removed from a board.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.RemoveAdminFromOrganization">
            <summary>
            Indicates an admin member was removed from an organization.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.RemoveChecklistFromCard">
            <summary>
            Indicates a checklist was removed from a card.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.RemoveFromOrganizationBoard">
            <summary>
            Indicates an organization was removed from a board.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.RemoveMemberFromBoard">
            <summary>
            Indicates a member was removed from a board.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.RemoveMemberFromCard">
            <summary>
            Indicates a member was removed from a card.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.UnconfirmedBoardInvitation">
            <summary>
            Indicates an invitation to a board was created.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.UnconfirmedOrganizationInvitation">
            <summary>
            Indicates an invitation to an organization was created.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.UpdateBoard">
            <summary>
            Indicates a board was updated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.UpdateCard">
            <summary>
            Indicates a card was updated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.UpdateCheckItemStateOnCard">
            <summary>
            Indicates a checklist item was checked or unchecked.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.UpdateChecklist">
            <summary>
            Indicates a checklist was updated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.UpdateMember">
            <summary>
            Indicates a member was updated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.UpdateOrganization">
            <summary>
            Indicates an organization was updated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.UpdateCardIdList">
            <summary>
            Indicates a card was moved to a new list.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.UpdateCardClosed">
            <summary>
            Indicates a card was archived or unarchived.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.UpdateCardDesc">
            <summary>
            Indicates a card description was updated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.UpdateCardName">
            <summary>
            Indicates a card name was updated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.VoteOnCard">
            <summary>
            Indicates a member voted on a card.
            </summary>
        </member>
        <member name="F:Manatee.Trello.ActionType.UpdateList">
            <summary>
            Indicates a member updated a list.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Attachment">
            <summary>
             Represents an attachment to a Card.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Attachment.#ctor">
            <summary>
            Creates a new instance of the Attachment class.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Attachment.Delete">
            <summary>
            Deletes this attachment.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Attachment.Equals(Manatee.Trello.Attachment)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Manatee.Trello.Attachment.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The object to compare with the current object. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.Attachment.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.Attachment.CompareTo(Manatee.Trello.Attachment)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <returns>
            A value that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the <paramref name="other"/> parameter.Zero This object is equal to <paramref name="other"/>. Greater than zero This object is greater than <paramref name="other"/>. 
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Manatee.Trello.Attachment.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.Attachment.Refresh">
            <summary>
            Retrieves updated data from the service instance and refreshes the object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Attachment.Bytes">
            <summary>
             The size of the attachment.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Attachment.Date">
            <summary>
            The date on which the attachment was created.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Attachment.Id">
            <summary>
            Gets a unique identifier (not necessarily a GUID).
            </summary>
        </member>
        <member name="P:Manatee.Trello.Attachment.IsUpload">
            <summary>
             ?
            </summary>
        </member>
        <member name="P:Manatee.Trello.Attachment.Member">
            <summary>
             The member who created the attachment.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Attachment.MimeType">
            <summary>
             Indicates the type of attachment.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Attachment.Name">
            <summary>
             The name of the attachment.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Attachment.Previews">
            <summary>
             Enumerates a collection of previews for the attachment.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Attachment.Url">
            <summary>
             Indicates the attachment storage location.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Attachment.IsStubbed">
            <summary>
            Gets whether this entity represents an actual entity on Trello.
            </summary>
        </member>
        <member name="T:Manatee.Trello.AttachmentPreview">
            <summary>
             Represents a thumbnail preview of a card attachment.
            </summary>
        </member>
        <member name="P:Manatee.Trello.AttachmentPreview.Id">
            <summary>
             Indicates the ID of the attachment preview.
            </summary>
        </member>
        <member name="P:Manatee.Trello.AttachmentPreview.Height">
            <summary>
             Indicates the height in pixels of the attachment preview.
            </summary>
        </member>
        <member name="P:Manatee.Trello.AttachmentPreview.Url">
            <summary>
             Indicates the attachment storage location.
            </summary>
        </member>
        <member name="P:Manatee.Trello.AttachmentPreview.Width">
            <summary>
             Indicates the width in pixels of the attachment preview.
            </summary>
        </member>
        <member name="T:Manatee.Trello.BoardCommentType">
            <summary>
             Enumerates known board commenting permission levels.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardCommentType.Unknown">
            <summary>
            Not recognized.  May have been created since the current version of this API.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardCommentType.Members">
            <summary>
            Indicates that only members of the board may comment on cards.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardCommentType.Org">
            <summary>
            Indicates that only members of the organization to which the board belongs may comment on cards.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardCommentType.Public">
            <summary>
            Indicates that any Trello member may comment on cards.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardCommentType.Disabled">
            <summary>
            Indicates that no members may comment on cards.
            </summary>
        </member>
        <member name="T:Manatee.Trello.BoardInvitationType">
            <summary>
             Enumerates known board invitation permission levels.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardInvitationType.Unknown">
            <summary>
            Not recognized.  May have been created since the current version of this API.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardInvitationType.Members">
            <summary>
            Indicates that any member of the board may extend an invitation to join the board.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardInvitationType.Admins">
            <summary>
            Indicates that only admins of the board may extend an invitation to joni the board.
            </summary>
        </member>
        <member name="T:Manatee.Trello.BoardMembership">
            <summary>
             Represents a member of a board, including their membership type.
            </summary>
        </member>
        <member name="M:Manatee.Trello.BoardMembership.#ctor">
            <summary>
            Creates a new instance of the BoardMembership class.
            </summary>
        </member>
        <member name="M:Manatee.Trello.BoardMembership.Equals(Manatee.Trello.BoardMembership)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Manatee.Trello.BoardMembership.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The object to compare with the current object. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.BoardMembership.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.BoardMembership.CompareTo(Manatee.Trello.BoardMembership)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <returns>
            A value that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the <paramref name="other"/> parameter.Zero This object is equal to <paramref name="other"/>. Greater than zero This object is greater than <paramref name="other"/>. 
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Manatee.Trello.BoardMembership.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.BoardMembership.Refresh">
            <summary>
            Retrieves updated data from the service instance and refreshes the object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardMembership.Id">
            <summary>
            Gets a unique identifier (not necessarily a GUID).
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardMembership.IsDeactivated">
            <summary>
             Gets whether the membership is deactivated.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardMembership.Member">
            <summary>
             Gets the member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardMembership.MembershipType">
            <summary>
             Gets the membership type.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardMembership.IsStubbed">
            <summary>
            Gets whether this entity represents an actual entity on Trello.
            </summary>
        </member>
        <member name="T:Manatee.Trello.BoardMembershipType">
            <summary>
             Enumerates known board membership types.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardMembershipType.Unknown">
            <summary>
            Not recognized.  May have been created since the current version of this API.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardMembershipType.Admin">
            <summary>
            Indicates the member is an admin of the board.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardMembershipType.Normal">
            <summary>
            Indicates the member is a normal member of the board.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardMembershipType.Observer">
            <summary>
            Indicates the member is may only view the board.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardMembershipType.Ghost">
            <summary>
            Indicates the member has been invited, but has not yet joined Trello.
            </summary>
        </member>
        <member name="T:Manatee.Trello.BoardPermissionLevelType">
            <summary>
             Enumerates known values for board permission levels
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardPermissionLevelType.Unknown">
            <summary>
            Not recognized.  May have been created since the current version of this API.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardPermissionLevelType.Private">
            <summary>
            Indicates that the board can only be viewed by its members.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardPermissionLevelType.Org">
            <summary>
            Indicates that the board may be viewed by any member of the organization to which the board belongs.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardPermissionLevelType.Public">
            <summary>
            Indicates that anyone (even non-Trello users) may view the board.
            </summary>
        </member>
        <member name="T:Manatee.Trello.BoardPersonalPreferences">
            <summary>
             Represents a member's viewing preferences for a board
            </summary>
        </member>
        <member name="M:Manatee.Trello.BoardPersonalPreferences.#ctor">
            <summary>
            Creates a new instance of the CheckList class.
            </summary>
        </member>
        <member name="M:Manatee.Trello.BoardPersonalPreferences.Refresh">
            <summary>
            Retrieves updated data from the service instance and refreshes the object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardPersonalPreferences.ShowListGuide">
            <summary>
             Gets or sets whether the list guide (left side of the screen) is expanded.
            </summary>
             <remarks>
             The option to show the list guide is only active when horizontal scrolling is enabled.
             </remarks>
        </member>
        <member name="P:Manatee.Trello.BoardPersonalPreferences.ShowSidebar">
            <summary>
             Gets or sets whether the side bar (right side of the screen) is shown
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardPersonalPreferences.ShowSidebarActivity">
            <summary>
            Gets or sets whether the activity section of the side bar is shown.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardPersonalPreferences.ShowSidebarBoardActions">
            <summary>
            Gets or sets whether the board actions (Add List/Add Member/Filter Cards) section of the side bar is shown.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardPersonalPreferences.ShowSidebarMembers">
            <summary>
             Gets or sets whether the members section of the list of the side bar is shown.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardPersonalPreferences.IsStubbed">
            <summary>
            Gets whether this entity represents an actual entity on Trello.
            </summary>
        </member>
        <member name="T:Manatee.Trello.BoardVotingType">
            <summary>
            Enumerates known voting permission levels for a board
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardVotingType.Unknown">
            <summary>
            Not recognized.  May have been created since the current version of this API.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardVotingType.Members">
            <summary>
            Indicates that only members of the board may vote on cards.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardVotingType.Org">
            <summary>
            Indicates that only members of the organization to which the board belongs may vote on cards.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardVotingType.Public">
            <summary>
            Indicates that any Trello member may vote on cards.
            </summary>
        </member>
        <member name="F:Manatee.Trello.BoardVotingType.Disabled">
            <summary>
            Indicates that no members may vote on cards.
            </summary>
        </member>
        <member name="T:Manatee.Trello.CheckItemStateType">
            <summary>
            Enumerates known values for an item in a checklist.
            </summary>
        </member>
        <member name="F:Manatee.Trello.CheckItemStateType.Unknown">
            <summary>
            Not recognized.  May have been created since the current version of this API.
            </summary>
        </member>
        <member name="F:Manatee.Trello.CheckItemStateType.Incomplete">
            <summary>
            Indicates that the checlist item is not checked.
            </summary>
        </member>
        <member name="F:Manatee.Trello.CheckItemStateType.Complete">
            <summary>
            Indicates that the checlist item is checked.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IDeserializer">
            <summary>
            Defines methods required by the IRestClient to deserialize a response
            from JSON to an object.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Json.IDeserializer.Deserialize``1(Manatee.Trello.Rest.IRestResponse{``0})">
            <summary>
            Attempts to deserialize a RESTful response to the indicated type.
            </summary>
            <typeparam name="T">The type of object expected.</typeparam>
            <param name="response">The response object which contains the JSON to deserialize.</param>
            <returns>The requested object, if JSON is valid; null otherwise.</returns>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonSearchResults">
            <summary>
            Defines the JSON structure for the SearchResults object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonSearchResults.ActionIds">
            <summary>
            Lists the IDs of actions which match the query.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonSearchResults.BoardIds">
            <summary>
            Lists the IDs of boards which match the query.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonSearchResults.CardIds">
            <summary>
            Lists the IDs of cards which match the query.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonSearchResults.MemberIds">
            <summary>
            Lists the IDs of members which match the query.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonSearchResults.OrganizationIds">
            <summary>
            Lists the IDs of organizations which match the query.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Json.IJsonTokenPermission">
            <summary>
            Defines the JSON structure for the TokenPermission object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonTokenPermission.IdModel">
            <summary>
            Gets or sets the ID of the model to which a token grants permissions.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonTokenPermission.ModelType">
            <summary>
            Gets or sets the type of the model.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonTokenPermission.Read">
            <summary>
            Gets or sets whether a token grants read permissions to the model.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Json.IJsonTokenPermission.Write">
            <summary>
            Gets or sets whether a token grants write permissions to the model.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Rest.IRestClient">
            <summary>
            Defines methods required to make RESTful calls.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Rest.IRestClient.Execute``1(Manatee.Trello.Rest.IRestRequest)">
            <summary>
            Makes a RESTful call and expects a single object to be returned.
            </summary>
            <typeparam name="T">The expected type of object to receive in response.</typeparam>
            <param name="request">The request.</param>
            <returns>The response.</returns>
        </member>
        <member name="T:Manatee.Trello.Rest.IRestClientProvider">
            <summary>
            Defines methods required to create an instance of IRestClient.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Rest.IRestClientProvider.CreateRestClient(System.String)">
            <summary>
            Creates an instance of IRestClient.
            </summary>
            <param name="apiBaseUrl">The base URL to be used by the client</param>
            <returns>An instance of IRestClient.</returns>
        </member>
        <member name="P:Manatee.Trello.Rest.IRestClientProvider.RequestProvider">
            <summary>
            Creates requests for the client.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Rest.IRestClientProvider.Serializer">
            <summary>
            Gets and sets the JSON serializer for the client to use.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Rest.IRestClientProvider.Deserializer">
            <summary>
            Gets and sets the JSON deserializer for the client to use.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Rest.IRestRequest">
            <summary>
            Defines properties and methods required to make RESTful requests.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Rest.IRestRequest.AddParameter(System.String,System.Object)">
            <summary>
            Explicitly adds a parameter to the request.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Manatee.Trello.Rest.IRestRequest.AddBody(System.Object)">
            <summary>
            Adds a body to the request.
            </summary>
            <param name="body">The body.</param>
        </member>
        <member name="P:Manatee.Trello.Rest.IRestRequest.Method">
            <summary>
            Gets and sets the method to be used in the call.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Rest.IRestRequest.Resource">
            <summary>
            Gets the URI enpoint for the request.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Rest.IRestRequest.Response">
            <summary>
            Stores the response returned by the server.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Rest.IRestRequest.Parameters">
            <summary>
            Gets the collection of parameters for the request.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Rest.IRestRequestProvider">
            <summary>
            Defines methods to generate IRequest objects used to make RESTful calls.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Rest.IRestRequestProvider.Create(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Creates a general request using a collection of objects and an additional parameter to
            generate the resource string and an object to supply additional parameters.
            </summary>
            <param name="endpoint">The method endpoint the request calls.</param>
            <param name="parameters">A list of paramaters to include in the request.</param>
            <returns>An IRestRequest instance which can be sent to an IRestClient.</returns>
        </member>
        <member name="M:Manatee.Trello.Rest.IRestRequestProvider.Create(Manatee.Trello.Rest.IRestRequest)">
            <summary>
            Creates a general request using an existing request.  This is used when restoring
            requests for type conformity.
            </summary>
            <param name="request">The request to copy.</param>
            <returns>A new request of the correct type for the REST client.</returns>
        </member>
        <member name="T:Manatee.Trello.Json.ISerializer">
            <summary>
            Defines methods required by the IRestClient to serialize an object to JSON.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Json.ISerializer.Serialize(System.Object)">
            <summary>
            Serializes an object to JSON.
            </summary>
            <param name="obj">The object to serialize.</param>
            <returns>An equivalent JSON string.</returns>
        </member>
        <member name="T:Manatee.Trello.Rest.RestMethod">
            <summary>
            Enumerates the RESTful call methods required by TrelloService.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Rest.RestMethod.Get">
            <summary>
             Indicates an HTTP GET operation.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Rest.RestMethod.Put">
            <summary>
             Indicates an HTTP PUT operation.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Rest.RestMethod.Post">
            <summary>
             Indicates an HTTP POST operation.
            </summary>
        </member>
        <member name="F:Manatee.Trello.Rest.RestMethod.Delete">
            <summary>
             Indicates an HTTP DELETE operation.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Exceptions.EntityNotOnTrelloException`1">
            <summary>
            Thrown when attempting to assign an entity without an ID.
            </summary>
            <typeparam name="T">The type of object which generated the error.</typeparam>
        </member>
        <member name="M:Manatee.Trello.Exceptions.EntityNotOnTrelloException`1.#ctor(`0)">
            <summary>
            Creates an instance of the EntityNotOnTrelloException&lt;T&gt; class.
            </summary>
            <param name="entity">The object which generated the error.</param>
        </member>
        <member name="P:Manatee.Trello.Exceptions.EntityNotOnTrelloException`1.Entity">
            <summary>
            The object which generated the error.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Internal.OneToOneMap`2">
            <summary>
            This is a dictionary guaranteed to have only one of each value and key. 
            It may be searched either by TFirst or by TSecond, giving a unique answer because it is 1 to 1.
            </summary>
            <typeparam name="TFirst">The type of the "key"</typeparam>
            <typeparam name="TSecond">The type of the "value"</typeparam>
        </member>
        <member name="M:Manatee.Trello.Internal.OneToOneMap`2.Add(`0,`1)">
            <summary>
            Tries to add the pair to the dictionary.
            Throws an exception if either element is already in the dictionary
            </summary>
            <param name="first"></param>
            <param name="second"></param>
        </member>
        <member name="M:Manatee.Trello.Internal.OneToOneMap`2.GetByFirst(`0)">
            <summary>
            Find the TSecond corresponding to the TFirst first
            Throws an exception if first is not in the dictionary.
            </summary>
            <param name="first">the key to search for</param>
            <returns>the value corresponding to first</returns>
        </member>
        <member name="M:Manatee.Trello.Internal.OneToOneMap`2.GetBySecond(`1)">
            <summary>
            Find the TFirst corresponing to the Second second.
            Throws an exception if second is not in the dictionary.
            </summary>
            <param name="second">the key to search for</param>
            <returns>the value corresponding to second</returns>
        </member>
        <member name="M:Manatee.Trello.Internal.OneToOneMap`2.RemoveByFirst(`0)">
            <summary>
            Remove the record containing first.
            If first is not in the dictionary, throws an Exception.
            </summary>
            <param name="first">the key of the record to delete</param>
        </member>
        <member name="M:Manatee.Trello.Internal.OneToOneMap`2.RemoveBySecond(`1)">
            <summary>
            Remove the record containing second.
            If second is not in the dictionary, throws an Exception.
            </summary>
            <param name="second">the key of the record to delete</param>
        </member>
        <member name="M:Manatee.Trello.Internal.OneToOneMap`2.TryAdd(`0,`1)">
            <summary>
            Tries to add the pair to the dictionary.
            Returns false if either element is already in the dictionary        
            </summary>
            <param name="first"></param>
            <param name="second"></param>
            <returns>true if successfully added, false if either element are already in the dictionary</returns>
        </member>
        <member name="M:Manatee.Trello.Internal.OneToOneMap`2.TryGetByFirst(`0,`1@)">
            <summary>
            Find the TSecond corresponding to the TFirst first.
            Returns false if first is not in the dictionary.
            </summary>
            <param name="first">the key to search for</param>
            <param name="second">the corresponding value</param>
            <returns>true if first is in the dictionary, false otherwise</returns>
        </member>
        <member name="M:Manatee.Trello.Internal.OneToOneMap`2.TryGetBySecond(`1,`0@)">
            <summary>
            Find the TFirst corresponding to the TSecond second.
            Returns false if second is not in the dictionary.
            </summary>
            <param name="second">the key to search for</param>
            <param name="first">the corresponding value</param>
            <returns>true if second is in the dictionary, false otherwise</returns>
        </member>
        <member name="M:Manatee.Trello.Internal.OneToOneMap`2.TryRemoveByFirst(`0)">
            <summary>
            Remove the record containing first, if there is one.
            </summary>
            <param name="first"></param>
            <returns> If first is not in the dictionary, returns false, otherwise true</returns>
        </member>
        <member name="M:Manatee.Trello.Internal.OneToOneMap`2.TryRemoveBySecond(`1)">
            <summary>
            Remove the record containing second, if there is one.
            </summary>
            <param name="second"></param>
            <returns> If second is not in the dictionary, returns false, otherwise true</returns>
        </member>
        <member name="M:Manatee.Trello.Internal.OneToOneMap`2.Clear">
            <summary>
            Removes all items from the dictionary.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Internal.OneToOneMap`2.Count">
            <summary>
            The number of pairs stored in the dictionary
            </summary>
        </member>
        <member name="T:Manatee.Trello.LabelColor">
            <summary>
            Enumerates label colors for a board.
            </summary>
        </member>
        <member name="F:Manatee.Trello.LabelColor.Unknown">
            <summary>
            Not recognized.  May have been created since the current version of this API.
            </summary>
        </member>
        <member name="F:Manatee.Trello.LabelColor.Green">
            <summary>
            Indicates a green label.
            </summary>
        </member>
        <member name="F:Manatee.Trello.LabelColor.Yellow">
            <summary>
            Indicates a yellow label.
            </summary>
        </member>
        <member name="F:Manatee.Trello.LabelColor.Orange">
            <summary>
            Indicates an orange label.
            </summary>
        </member>
        <member name="F:Manatee.Trello.LabelColor.Red">
            <summary>
            Indicates a red label.
            </summary>
        </member>
        <member name="F:Manatee.Trello.LabelColor.Purple">
            <summary>
            Indicates a purple label.
            </summary>
        </member>
        <member name="F:Manatee.Trello.LabelColor.Blue">
            <summary>
            Indicates a blue label.
            </summary>
        </member>
        <member name="T:Manatee.Trello.MemberStatusType">
            <summary>
            Enumerates known values for a member's activity status.
            </summary>
        </member>
        <member name="F:Manatee.Trello.MemberStatusType.Unknown">
            <summary>
            Not recognized.  May have been created since the current version of this API.
            </summary>
        </member>
        <member name="F:Manatee.Trello.MemberStatusType.Disconnected">
            <summary>
            Indicates the member is not connected to the website.
            </summary>
        </member>
        <member name="F:Manatee.Trello.MemberStatusType.Idle">
            <summary>
            Indicates the member is connected to the website but inactive.
            </summary>
        </member>
        <member name="F:Manatee.Trello.MemberStatusType.Active">
            <summary>
            Indicates the member is actively using the website.
            </summary>
        </member>
        <member name="T:Manatee.Trello.NotificationType">
            <summary>
             Enumerates known types of notifications.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.Unknown">
            <summary>
            Not recognized.  May have been created since the current version of this API.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.AddedAttachmentToCard">
            <summary>
            Indicates an attachment was added to a card.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.AddedToBoard">
            <summary>
            Indicates the current member was added to a board.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.AddedToCard">
            <summary>
            Indicates the current member was added to a card.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.AddedToOrganization">
            <summary>
            Indicates the current member was added to an organization.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.AddedMemberToCard">
            <summary>
            Indicates another member was added to an card.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.AddAdminToBoard">
            <summary>
            Indicates the current member was added to a board as an admin.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.AddAdminToOrganization">
            <summary>
            Indicates the current member was added to an organization as an admin.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.ChangeCard">
            <summary>
            Indicates a card was changed.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.CloseBoard">
            <summary>
            Indicates a board was closed.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.CommentCard">
            <summary>
            Indicates another member commented on a card.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.CreatedCard">
            <summary>
            Indicates another member created a card.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.InvitedToBoard">
            <summary>
            Indicates the current member was invited to a board.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.InvitedToOrganization">
            <summary>
            Indicates the current member was invited to an organization.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.RemovedFromBoard">
            <summary>
            Indicates the current member was removed from a board.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.RemovedFromCard">
            <summary>
            Indicates the current member was removed from a card.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.RemovedMemberFromCard">
            <summary>
            Indicates another member was removed from a card.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.RemovedFromOrganization">
            <summary>
            Indicates the current member was removed from an organization.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.MentionedOnCard">
            <summary>
            Indicates the current member was mentioned on a card.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.UnconfirmedInvitedToBoard">
            <summary>
            Indicates the current member is unconfirmed and invited to a board. ?
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.UnconfirmedInvitedToOrganization">
            <summary>
            Indicates the current member is unconfirmed and invited to an organization. ?
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.UpdateCheckItemStateOnCard">
            <summary>
            Indicates a checklist item was updated.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.MakeAdminOfBoard">
            <summary>
            Indicates the current member was made an admin of a board.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.MakeAdminOfOrganization">
            <summary>
            Indicates the current member was made an admin of an organization.
            </summary>
        </member>
        <member name="F:Manatee.Trello.NotificationType.CardDueSoon">
            <summary>
            Indicates a card due date is approaching.
            </summary>
        </member>
        <member name="T:Manatee.Trello.TrelloAuthorization">
            <summary>
            Contains authorization tokens needed to connect to trello.com.
            </summary>
        </member>
        <member name="M:Manatee.Trello.TrelloAuthorization.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of the TrelloAuthorization class.
            </summary>
            <param name="appKey">The application key.</param>
            <param name="userToken">The user token.</param>
        </member>
        <member name="P:Manatee.Trello.TrelloAuthorization.AppKey">
            <summary>
            The token which identifies the application attempting to connect.
            </summary>
        </member>
        <member name="P:Manatee.Trello.TrelloAuthorization.UserToken">
            <summary>
            The token which identifies special permissions as granted by a specific user.
            </summary>
        </member>
        <member name="T:Manatee.Trello.TrelloServiceConfiguration">
            <summary>
            Exposes a set of run-time options for all automatically-refreshing objects.
            </summary>
        </member>
        <member name="M:Manatee.Trello.TrelloServiceConfiguration.#ctor">
            <summary>
            Creates a new instance of the TrelloServiceConfiguration class.
            </summary>
        </member>
        <member name="P:Manatee.Trello.TrelloServiceConfiguration.GlobalLog">
            <summary>
            Provides a default logging solution.  New ITrelloService instances will use
            this unless overridden in an ITrelloServiceConfiguration instance.
            </summary>
        </member>
        <member name="P:Manatee.Trello.TrelloServiceConfiguration.GlobalCache">
            <summary>
            Provides a default caching solution.  New ITrelloService instances will use
            this unless overridden in an ITrelloServiceConfiguration instance.
            </summary>
        </member>
        <member name="P:Manatee.Trello.TrelloServiceConfiguration.ItemDuration">
            <summary>
            Gets and sets the global duration setting for all auto-refreshing objects.
            </summary>
        </member>
        <member name="P:Manatee.Trello.TrelloServiceConfiguration.Serializer">
            <summary>
            Specifies the serializer which is used the first time a request is made from
            a given instance of the TrelloService class.
            </summary>
        </member>
        <member name="P:Manatee.Trello.TrelloServiceConfiguration.Deserializer">
            <summary>
            Specifies the deserializer which is used the first time a request is made from
            a given instance of the TrelloService class.
            </summary>
        </member>
        <member name="P:Manatee.Trello.TrelloServiceConfiguration.RestClientProvider">
            <summary>
            Specifies the REST client provider which is used the first time a request is made from
            a given instance of the TrelloService class.
            </summary>
        </member>
        <member name="P:Manatee.Trello.TrelloServiceConfiguration.Cache">
            <summary>
            Provides a cache for TrelloService.  Defaults to TrelloServiceConfiguration.GlobalCache.
            </summary>
        </member>
        <member name="P:Manatee.Trello.TrelloServiceConfiguration.Log">
            <summary>
            Provides logging for all of Manatee.Trello.  The default log only writes to the Debug window.
            </summary>
        </member>
        <member name="T:Manatee.Trello.OrganizationPermissionLevelType">
            <summary>
             Enumerates known values for organization permission levels
            </summary>
        </member>
        <member name="F:Manatee.Trello.OrganizationPermissionLevelType.Unknown">
            <summary>
            Not recognized.  May have been created since the current version of this API.
            </summary>
        </member>
        <member name="F:Manatee.Trello.OrganizationPermissionLevelType.Private">
            <summary>
            Indicates that the organization can only be viewed by its members.
            </summary>
        </member>
        <member name="F:Manatee.Trello.OrganizationPermissionLevelType.Public">
            <summary>
            Indicates that anyone (even non-Trello users) may view the organization.
            </summary>
        </member>
        <member name="T:Manatee.Trello.OrganizationPreferences">
            <summary>
            Represents available preference settings for an organization.
            </summary>
        </member>
        <member name="M:Manatee.Trello.OrganizationPreferences.#ctor">
            <summary>
            Creates a new instance of the OrganizationPreferences class.
            </summary>
        </member>
        <member name="M:Manatee.Trello.OrganizationPreferences.Refresh">
            <summary>
            Retrieves updated data from the service instance and refreshes the object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.OrganizationPreferences.AssociatedDomain">
            <summary>
            Gets or sets the Google Apps domain.
            </summary>
        </member>
        <member name="P:Manatee.Trello.OrganizationPreferences.ExternalMembersDisabled">
            <summary>
            ?
            </summary>
        </member>
        <member name="P:Manatee.Trello.OrganizationPreferences.OrgVisibleBoardVisibility">
            <summary>
            Gets or sets the visibility of Org-visible boards owned by the organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.OrganizationPreferences.PermissionLevel">
            <summary>
            Gets or sets who may view the organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.OrganizationPreferences.PrivateBoardVisibility">
            <summary>
            Gets or sets the visibility of private boards owned by the organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.OrganizationPreferences.PublicBoardVisibility">
            <summary>
            Gets or sets the visibility of publicly-visible boards owned by the organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.OrganizationPreferences.IsStubbed">
            <summary>
            Gets whether this entity represents an actual entity on Trello.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Position">
            <summary>
            Represents the position of a checklist in a card, a card in a list,
            or list in a board
            </summary>
        </member>
        <member name="M:Manatee.Trello.Position.#ctor(System.Double)">
            <summary>
            Creates a new instance of the Position class.
            </summary>
            <param name="value">A positive integer.</param>
        </member>
        <member name="M:Manatee.Trello.Position.CompareTo(Manatee.Trello.Position)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <returns>
            A value that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the <paramref name="other"/> parameter.Zero This object is equal to <paramref name="other"/>. Greater than zero This object is greater than <paramref name="other"/>. 
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Manatee.Trello.Position.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
            <returns>
            A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance precedes <paramref name="obj"/> in the sort order. Zero This instance occurs in the same position in the sort order as <paramref name="obj"/>. Greater than zero This instance follows <paramref name="obj"/> in the sort order. 
            </returns>
            <param name="obj">An object to compare with this instance. </param><exception cref="T:System.ArgumentException"><paramref name="obj"/> is not the same type as this instance. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.Position.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.Position.op_Implicit(System.Double)~Manatee.Trello.Position">
            <summary>
            Implicitly casts a PositionValue to a Position.
            </summary>
            <param name="value">The PositionValue value.</param>
            <returns>The Position object.</returns>
        </member>
        <member name="M:Manatee.Trello.Position.op_Implicit(System.Int32)~Manatee.Trello.Position">
            <summary>
            Implicitly casts an int to a Position.
            </summary>
            <param name="value">a positive integer.</param>
            <returns>The Position object.</returns>
        </member>
        <member name="M:Manatee.Trello.Position.op_Explicit(Manatee.Trello.Position)~System.Double">
            <summary>
            Explicitly casts a Position to a PositionValue.
            </summary>
            <param name="position">The Position object.</param>
            <returns>The PositionValue value.</returns>
        </member>
        <member name="M:Manatee.Trello.Position.op_Explicit(Manatee.Trello.Position)~System.Int32">
            <summary>
            Explicitly casts a Position to an int.
            </summary>
            <param name="position">The Position object.</param>
            <returns>The int value.</returns>
        </member>
        <member name="M:Manatee.Trello.Position.op_Equality(Manatee.Trello.Position,Manatee.Trello.Position)">
            <summary>
            Compares two Position object by examining their content.
            </summary>
            <param name="a">A Position object.</param>
            <param name="b">A Position object.</param>
            <returns>True if equivalent, false otherwise.</returns>
        </member>
        <member name="M:Manatee.Trello.Position.op_Inequality(Manatee.Trello.Position,Manatee.Trello.Position)">
            <summary>
            Compares two Position object by examining their content.
            </summary>
            <param name="a">A Position object.</param>
            <param name="b">A Position object.</param>
            <returns>False if equivalent, true otherwise.</returns>
        </member>
        <member name="M:Manatee.Trello.Position.op_LessThan(Manatee.Trello.Position,Manatee.Trello.Position)">
            <summary>
            Compares two position values for linear order.
            </summary>
            <param name="a">A Position object.</param>
            <param name="b">A Position object.</param>
            <returns>True if the first operand is less than the second, false otherwise.</returns>
        </member>
        <member name="M:Manatee.Trello.Position.op_GreaterThan(Manatee.Trello.Position,Manatee.Trello.Position)">
            <summary>
            Compares two position values for linear order.
            </summary>
            <param name="a">A Position object.</param>
            <param name="b">A Position object.</param>
            <returns>True if the first operand is greater than the second, false otherwise.</returns>
        </member>
        <member name="M:Manatee.Trello.Position.op_LessThanOrEqual(Manatee.Trello.Position,Manatee.Trello.Position)">
            <summary>
            Compares two position values for linear order.
            </summary>
            <param name="a">A Position object.</param>
            <param name="b">A Position object.</param>
            <returns>True if the first operand is less than or equal to the second, false otherwise.</returns>
        </member>
        <member name="M:Manatee.Trello.Position.op_GreaterThanOrEqual(Manatee.Trello.Position,Manatee.Trello.Position)">
            <summary>
            Compares two position values for linear order.
            </summary>
            <param name="a">A Position object.</param>
            <param name="b">A Position object.</param>
            <returns>True if the first operand is greater than or equal to the second, false otherwise.</returns>
        </member>
        <member name="M:Manatee.Trello.Position.Equals(Manatee.Trello.Position)">
            <summary>
            Compares two Position object by examining their content.
            </summary>
            <param name="other">A Position object.</param>
            <returns>True if equivalent, false otherwise.</returns>
        </member>
        <member name="M:Manatee.Trello.Position.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The object to compare with the current object. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.Position.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Manatee.Trello.Position.Top">
            <summary>
            Represents the top position.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Position.Bottom">
            <summary>
            Represents the bottom position.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Position.Unknown">
            <summary>
            Represents an invalid position.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Position.IsValid">
            <summary>
            Gets whether the position is valid.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Badges">
            <summary>
             Represents the set of badges shown on the card cover.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Badges.#ctor">
            <summary>
            Creates a new instance of the Badges class.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Badges.Refresh">
            <summary>
            Retrieves updated data from the service instance and refreshes the object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Badges.Attachments">
            <summary>
             Indicates the number of attachments.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Badges.CheckItems">
            <summary>
            Indicates the number of check items.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Badges.CheckItemsChecked">
            <summary>
            Indicates the number of check items which have been checked.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Badges.Comments">
            <summary>
            Indicates the number of comments.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Badges.DueDate">
            <summary>
            Indicates the due date, if one exists.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Badges.FogBugz">
            <summary>
            Indicates the FogBugz ID.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Badges.HasDescription">
            <summary>
            Indicates whether the card has a description.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Badges.IsSubscribed">
            <summary>
            Indicates whether the member is subscribed to the card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Badges.ViewingMemberVoted">
            <summary>
            Indicates whether the member has voted for this card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Badges.Votes">
            <summary>
            Indicates the number of votes.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Badges.IsStubbed">
            <summary>
            Gets whether this entity represents an actual entity on Trello.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Board">
            <summary>
             Represents a board.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Board.#ctor">
            <summary>
             Creates a new instance of the Board class.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Board.AddList(System.String,Manatee.Trello.Position)">
            <summary>
             Adds a new list to the board in the specified location
            </summary>
            <param name="name">The name of the list.</param>
            <param name="position">The desired position of the list.  Default is Bottom.  Invalid positions are ignored.</param>
            <returns>The new list.</returns>
        </member>
        <member name="M:Manatee.Trello.Board.AddOrUpdateMember(Manatee.Trello.Member,Manatee.Trello.BoardMembershipType)">
            <summary>
             Adds a member to the board or updates the permissions of a member already on the board.
            </summary>
            <param name="member">The member</param>
            <param name="type">The permission level for the member</param>
        </member>
        <member name="M:Manatee.Trello.Board.MarkAsViewed">
            <summary>
             Marks the board as viewed by the current member.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Board.InviteMember(Manatee.Trello.Member,Manatee.Trello.BoardMembershipType)">
            <summary>
            Extends an invitation to the board to another member.
            </summary>
            <param name="member">The member to invite.</param>
            <param name="type">The level of membership offered.</param>
        </member>
        <member name="M:Manatee.Trello.Board.RemoveMember(Manatee.Trello.Member)">
            <summary>
             Removes a member from the board.
            </summary>
            <param name="member"></param>
        </member>
        <member name="M:Manatee.Trello.Board.RescindInvitation(Manatee.Trello.Member)">
            <summary>
            Rescinds an existing invitation to the board.
            </summary>
            <param name="member"></param>
        </member>
        <member name="M:Manatee.Trello.Board.Equals(Manatee.Trello.Board)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Manatee.Trello.Board.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The object to compare with the current object. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.Board.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.Board.CompareTo(Manatee.Trello.Board)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <returns>
            A value that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the <paramref name="other"/> parameter.Zero This object is equal to <paramref name="other"/>. Greater than zero This object is greater than <paramref name="other"/>. 
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Manatee.Trello.Board.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.Board.Refresh">
            <summary>
            Retrieves updated data from the service instance and refreshes the object.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Board.Manatee#Trello#Internal#ICanWebhook#ApplyAction(Manatee.Trello.Action)">
            <summary>
            Applies the changes an action represents.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:Manatee.Trello.Board.VerifyNotExpired">
            <summary>
            Verifies that the object is not expired and updates if necessary.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Board.Actions">
            <summary>
             Enumerates all actions associated with this board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Board.Description">
            <summary>
             Gets or sets the board's description.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Board.Id">
            <summary>
            Gets a unique identifier (not necessarily a GUID).
            </summary>
        </member>
        <member name="P:Manatee.Trello.Board.InvitedMembers">
            <summary>
            Enumerates all members who have received invitations to this board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Board.IsClosed">
            <summary>
             Gets or sets whether this board is closed.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Board.IsPinned">
            <summary>
             Gets or sets whether this board is pinned to the user's Boards menu.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Board.IsSubscribed">
            <summary>
             Gets or sets whether the user is subscribed to this board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Board.LabelNames">
            <summary>
             Gets the board's set of label names.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Board.Lists">
            <summary>
             Gets the board's open lists.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Board.Members">
            <summary>
             Gets the board's members and their types.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Board.Memberships">
            <summary>
             Gets the board's members and their types.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Board.Name">
            <summary>
             Gets or sets the board's name.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Board.Organization">
            <summary>
            Gets or sets the organization, if any, to which this board belongs.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Board.PersonalPreferences">
            <summary>
             Gets the set of preferences for this board unique to the current member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Board.Preferences">
            <summary>
             Gets the set of preferences for this board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Board.Url">
            <summary>
             Gets the URL for this board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Board.IsStubbed">
            <summary>
            Gets whether this entity represents an actual entity on Trello.
            </summary>
        </member>
        <member name="T:Manatee.Trello.BoardPreferences">
            <summary>
             Represents available preferences setting for a board
            </summary>
        </member>
        <member name="M:Manatee.Trello.BoardPreferences.#ctor">
            <summary>
            Creates a new instance of the BoardPreferences class.
            </summary>
        </member>
        <member name="M:Manatee.Trello.BoardPreferences.Refresh">
            <summary>
            Retrieves updated data from the service instance and refreshes the object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardPreferences.AllowsSelfJoin">
            <summary>
            Gets or sets whether any Trello member may join a board without an invitation.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardPreferences.Comments">
            <summary>
            Gets or sets who may comment on cards.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardPreferences.Invitations">
            <summary>
            Gets or sets who may extend invitations to join the board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardPreferences.PermissionLevel">
            <summary>
            Gets or sets who may view the board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardPreferences.ShowCardCovers">
            <summary>
            Gets or sets whether card covers are shown on the board.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardPreferences.Voting">
            <summary>
            Gets or sets who may vote on cards.
            </summary>
        </member>
        <member name="P:Manatee.Trello.BoardPreferences.IsStubbed">
            <summary>
            Gets whether this entity represents an actual entity on Trello.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Card">
            <summary>
            Represents a card.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Card.#ctor">
            <summary>
            Creates a new instance of the Card class.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Card.AddAttachment(System.String,System.String)">
            <summary>
            Adds an attachment to the card.
            </summary>
            <returns>The attachment object.</returns>
        </member>
        <member name="M:Manatee.Trello.Card.AddCheckList(System.String,Manatee.Trello.Position)">
            <summary>
            Adds a checklist to the card.
            </summary>
            <param name="name">The name of the checklist</param>
            <param name="position">The desired position of the checklist.  Default is Bottom.  Invalid positions are ignored.</param>
            <returns>The checklist.</returns>
        </member>
        <member name="M:Manatee.Trello.Card.AddComment(System.String)">
            <summary>
            Adds a comment to the card.
            </summary>
            <param name="comment"></param>
        </member>
        <member name="M:Manatee.Trello.Card.ApplyLabel(Manatee.Trello.LabelColor)">
            <summary>
            Applies a lable to the card.
            </summary>
            <param name="color">The color of the label.</param>
        </member>
        <member name="M:Manatee.Trello.Card.AssignMember(Manatee.Trello.Member)">
            <summary>
            Assigns a member to the card.
            </summary>
            <param name="member">The member to assign.</param>
        </member>
        <member name="M:Manatee.Trello.Card.ClearNotifications">
            <summary>
            Marks all notifications associated to this card as read.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Card.Delete">
            <summary>
            Deletes the card.  This cannot be undone.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Card.Move(Manatee.Trello.Board,Manatee.Trello.List,Manatee.Trello.Position)">
            <summary>
            Moves the card to another board/list/position.
            </summary>
            <param name="board">The destination board.</param>
            <param name="list">The destination list.</param>
            <param name="position">The destination position.  Default is Bottom.  Invalid positions are ignored.</param>
        </member>
        <member name="M:Manatee.Trello.Card.RemoveLabel(Manatee.Trello.LabelColor)">
            <summary>
            Removes a label from a card.
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:Manatee.Trello.Card.RemoveMember(Manatee.Trello.Member)">
            <summary>
            Removes (unassigns) a member from a card.
            </summary>
            <param name="member"></param>
        </member>
        <member name="M:Manatee.Trello.Card.Equals(Manatee.Trello.Card)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Manatee.Trello.Card.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The object to compare with the current object. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.Card.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.Card.CompareTo(Manatee.Trello.Card)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <returns>
            A value that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the <paramref name="other"/> parameter.Zero This object is equal to <paramref name="other"/>. Greater than zero This object is greater than <paramref name="other"/>. 
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Manatee.Trello.Card.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.Card.Refresh">
            <summary>
            Retrieves updated data from the service instance and refreshes the object.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Card.Manatee#Trello#Internal#ICanWebhook#ApplyAction(Manatee.Trello.Action)">
            <summary>
            Applies the changes an action represents.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="P:Manatee.Trello.Card.Actions">
            <summary>
             Enumerates all actions associated with this card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.AttachmentCoverId">
            <summary>
            Gets the ID of the attachment cover image.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.Attachments">
            <summary>
            Enumerates the cards attachments.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.Badges">
            <summary>
            Gets the badges summarizing the card's contents.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.Board">
            <summary>
            Gets the board which contains the card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.CheckLists">
            <summary>
            Enumerates the card's checklists.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.Comments">
            <summary>
            Enumerates the card's comments.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.Description">
            <summary>
            Gets or sets the card's description.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.DueDate">
            <summary>
            Gets or sets the card's due date.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.Id">
            <summary>
            Gets a unique identifier (not necessarily a GUID).
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.IsClosed">
            <summary>
            Gets or sets whether a card has been archived.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.IsSubscribed">
            <summary>
            Gets or sets whether the current member is subscribed to this card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.Labels">
            <summary>
            Enumerates the labels applied to this card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.LastActivityDate">
            <summary>
            Gets the date of last activity for this card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.List">
            <summary>
            Gets the list which contains this card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.ManualCoverAttachment">
            <summary>
            Gets whether the cover attachment was manually selected ?
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.Members">
            <summary>
            Enumerates the members assigned to this card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.Name">
            <summary>
            Gets or sets the card's name
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.Position">
            <summary>
            Gets or sets the card's position.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.ShortId">
            <summary>
            Gets the card's short ID.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.Url">
            <summary>
            Gets the URL for this card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.VotingMembers">
            <summary>
            Enumerates the members who have voted for this card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.WarnWhenUpcoming">
            <summary>
            Sets whether the card should generate a notification email when the due date is near.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Card.IsStubbed">
            <summary>
            Gets whether this entity represents an actual entity on Trello.
            </summary>
        </member>
        <member name="T:Manatee.Trello.CheckItem">
            <summary>
            Represents an item in a checklist.
            </summary>
        </member>
        <member name="M:Manatee.Trello.CheckItem.#ctor">
            <summary>
            Creates a new instance of the CheckList class.
            </summary>
        </member>
        <member name="M:Manatee.Trello.CheckItem.ConvertToCard">
            <summary>
            Converts the CheckItem to a Card and deletes the CheckItem.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Manatee.Trello.CheckItem.DuplicateAsCard">
            <summary>
            Converts the CheckItem to a Card, leaving the CheckItem in place.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Manatee.Trello.CheckItem.Delete">
            <summary>
            Deletes this checklist item.  This cannot be undone.
            </summary>
        </member>
        <member name="M:Manatee.Trello.CheckItem.Equals(Manatee.Trello.CheckItem)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Manatee.Trello.CheckItem.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The object to compare with the current object. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.CheckItem.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.CheckItem.CompareTo(Manatee.Trello.CheckItem)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <returns>
            A value that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the <paramref name="other"/> parameter.Zero This object is equal to <paramref name="other"/>. Greater than zero This object is greater than <paramref name="other"/>. 
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Manatee.Trello.CheckItem.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.CheckItem.Refresh">
            <summary>
            Retrieves updated data from the service instance and refreshes the object.
            </summary>
        </member>
        <member name="M:Manatee.Trello.CheckItem.Manatee#Trello#Internal#ICanWebhook#ApplyAction(Manatee.Trello.Action)">
            <summary>
            Applies the changes an action represents.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="P:Manatee.Trello.CheckItem.Id">
            <summary>
            Gets a unique identifier (not necessarily a GUID).
            </summary>
        </member>
        <member name="P:Manatee.Trello.CheckItem.Name">
            <summary>
            Gets or sets the name of the checklist item.
            </summary>
        </member>
        <member name="P:Manatee.Trello.CheckItem.Position">
            <summary>
            Gets or sets the position of the checklist item.
            </summary>
        </member>
        <member name="P:Manatee.Trello.CheckItem.State">
            <summary>
            Gets or sets the check state of the checklist item.
            </summary>
        </member>
        <member name="P:Manatee.Trello.CheckItem.IsStubbed">
            <summary>
            Gets whether this entity represents an actual entity on Trello.
            </summary>
        </member>
        <member name="T:Manatee.Trello.CheckList">
            <summary>
            Represents a checklist.
            </summary>
        </member>
        <member name="M:Manatee.Trello.CheckList.#ctor">
            <summary>
            Creates a new instance of the CheckList class.
            </summary>
        </member>
        <member name="M:Manatee.Trello.CheckList.AddCheckItem(System.String,Manatee.Trello.CheckItemStateType,Manatee.Trello.Position)">
            <summary>
            Adds a new item to the checklist.
            </summary>
            <param name="name">The name of the new item.</param>
            <param name="state">The initial state of the new item.</param>
            <param name="position">The position of the new item.  Default is Bottom.  Invalid positions are ignored.</param>
            <returns>The checkitem.</returns>
        </member>
        <member name="M:Manatee.Trello.CheckList.ConvertAllCheckItemsToCards(System.Boolean)">
            <summary>
            Converts all CheckItems to cards and optionally deletes the CheckList.
            </summary>
            <param name="deleteCheckList">true if the CheckList is to be deleted after conversion.</param>
            <returns>The Cards which represent the CheckItems.</returns>
        </member>
        <member name="M:Manatee.Trello.CheckList.DuplicateAllCheckItemsAsCards">
            <summary>
            Duplicates all CheckItems to cards, leaving the CheckItems in place.
            </summary>
            <returns>The Cards which represent the CheckItems.</returns>
        </member>
        <member name="M:Manatee.Trello.CheckList.Delete">
            <summary>
            Deletes this checklist.  This cannot be undone.
            </summary>
        </member>
        <member name="M:Manatee.Trello.CheckList.Equals(Manatee.Trello.CheckList)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Manatee.Trello.CheckList.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The object to compare with the current object. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.CheckList.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.CheckList.CompareTo(Manatee.Trello.CheckList)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <returns>
            A value that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the <paramref name="other"/> parameter.Zero This object is equal to <paramref name="other"/>. Greater than zero This object is greater than <paramref name="other"/>. 
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Manatee.Trello.CheckList.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.CheckList.Refresh">
            <summary>
            Retrieves updated data from the service instance and refreshes the object.
            </summary>
        </member>
        <member name="M:Manatee.Trello.CheckList.Manatee#Trello#Internal#ICanWebhook#ApplyAction(Manatee.Trello.Action)">
            <summary>
            Applies the changes an action represents.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="P:Manatee.Trello.CheckList.Board">
            <summary>
            Gets the board which contains this checklist.
            </summary>
        </member>
        <member name="P:Manatee.Trello.CheckList.Card">
            <summary>
            Gets or sets the card which contains this checklist.
            </summary>
        </member>
        <member name="P:Manatee.Trello.CheckList.CheckItems">
            <summary>
            Enumerates the items this checklist contains.
            </summary>
        </member>
        <member name="P:Manatee.Trello.CheckList.Id">
            <summary>
            Gets a unique identifier (not necessarily a GUID).
            </summary>
        </member>
        <member name="P:Manatee.Trello.CheckList.Name">
            <summary>
            Gets or sets the name of this checklist.
            </summary>
        </member>
        <member name="P:Manatee.Trello.CheckList.Position">
            <summary>
            Gets or sets the position of this checklist.
            </summary>
        </member>
        <member name="P:Manatee.Trello.CheckList.IsStubbed">
            <summary>
            Gets whether this entity represents an actual entity on Trello.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Label">
            <summary>
            Represents a label as applied to a card.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Label.#ctor">
            <summary>
            Creates a new instance of the Label class.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Label.Equals(Manatee.Trello.Label)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Manatee.Trello.Label.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The object to compare with the current object. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.Label.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.Label.CompareTo(Manatee.Trello.Label)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <returns>
            A value that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the <paramref name="other"/> parameter.Zero This object is equal to <paramref name="other"/>. Greater than zero This object is greater than <paramref name="other"/>. 
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Manatee.Trello.Label.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.Label.Refresh">
            <summary>
            Retrieves updated data from the service instance and refreshes the object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Label.Color">
            <summary>
            Gets the color of the label.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Label.Name">
            <summary>
            Gets the name of the label.  Tied to the board which contains the card.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Label.IsStubbed">
            <summary>
            Gets whether this entity represents an actual entity on Trello.
            </summary>
        </member>
        <member name="T:Manatee.Trello.LabelNames">
            <summary>
            Defines a set of labels for a board.
            </summary>
        </member>
        <member name="M:Manatee.Trello.LabelNames.#ctor">
            <summary>
            Creates a new instance of the LabelNames class.
            </summary>
        </member>
        <member name="M:Manatee.Trello.LabelNames.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Manatee.Trello.LabelNames.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.LabelNames.Refresh">
            <summary>
            Retrieves updated data from the service instance and refreshes the object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.LabelNames.Red">
            <summary>
            Gets or sets the name of the red label.
            </summary>
        </member>
        <member name="P:Manatee.Trello.LabelNames.Orange">
            <summary>
            Gets or sets the name of the orange label.
            </summary>
        </member>
        <member name="P:Manatee.Trello.LabelNames.Yellow">
            <summary>
            Gets or sets the name of the yellow label.
            </summary>
        </member>
        <member name="P:Manatee.Trello.LabelNames.Green">
            <summary>
            Gets or sets the name of the green label.
            </summary>
        </member>
        <member name="P:Manatee.Trello.LabelNames.Blue">
            <summary>
            Gets or sets the name of the blue label.
            </summary>
        </member>
        <member name="P:Manatee.Trello.LabelNames.Purple">
            <summary>
            Gets or sets the name of the purple label.
            </summary>
        </member>
        <member name="P:Manatee.Trello.LabelNames.IsStubbed">
            <summary>
            Gets whether this entity represents an actual entity on Trello.
            </summary>
        </member>
        <member name="T:Manatee.Trello.List">
            <summary>
            Represents a list.
            </summary>
        </member>
        <member name="M:Manatee.Trello.List.#ctor">
            <summary>
            Creates a new instance of the List class.
            </summary>
        </member>
        <member name="M:Manatee.Trello.List.AddCard(System.String,System.String,Manatee.Trello.Position)">
            <summary>
            Adds a new card to the list.
            </summary>
            <param name="name">The name of the card.</param>
            <param name="description">The description of the card.</param>
            <param name="position">The position of the card.  Default is Bottom.  Invalid positions are ignored.</param>
            <returns>The card.</returns>
        </member>
        <member name="M:Manatee.Trello.List.Delete">
            <summary>
            Deletes the list.  This cannot be undone.
            </summary>
        </member>
        <member name="M:Manatee.Trello.List.Equals(Manatee.Trello.List)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Manatee.Trello.List.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The object to compare with the current object. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.List.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.List.CompareTo(Manatee.Trello.List)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <returns>
            A value that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the <paramref name="other"/> parameter.Zero This object is equal to <paramref name="other"/>. Greater than zero This object is greater than <paramref name="other"/>. 
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Manatee.Trello.List.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.List.Refresh">
            <summary>
            Retrieves updated data from the service instance and refreshes the object.
            </summary>
        </member>
        <member name="M:Manatee.Trello.List.Manatee#Trello#Internal#ICanWebhook#ApplyAction(Manatee.Trello.Action)">
            <summary>
            Applies the changes an action represents.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="P:Manatee.Trello.List.Actions">
            <summary>
             Enumerates all actions associated with the list.
            </summary>
        </member>
        <member name="P:Manatee.Trello.List.Board">
            <summary>
            Gets the board which contains the list.
            </summary>
        </member>
        <member name="P:Manatee.Trello.List.Cards">
            <summary>
            Enumerates all cards in the list.
            </summary>
        </member>
        <member name="P:Manatee.Trello.List.Id">
            <summary>
            Gets a unique identifier (not necessarily a GUID).
            </summary>
        </member>
        <member name="P:Manatee.Trello.List.IsClosed">
            <summary>
            Gets or sets whether the list is archived.
            </summary>
        </member>
        <member name="P:Manatee.Trello.List.IsSubscribed">
            <summary>
            Gets or sets whether the current member is subscribed to the list.
            </summary>
        </member>
        <member name="P:Manatee.Trello.List.Name">
            <summary>
            Gets or sets the name of the list.
            </summary>
        </member>
        <member name="P:Manatee.Trello.List.Position">
            <summary>
            Gets or sets the position of the list.
            </summary>
        </member>
        <member name="P:Manatee.Trello.List.IsStubbed">
            <summary>
            Gets whether this entity represents an actual entity on Trello.
            </summary>
        </member>
        <member name="T:Manatee.Trello.MemberPreferences">
            <summary>
            Represents available preference settings for a member.
            </summary>
        </member>
        <member name="M:Manatee.Trello.MemberPreferences.#ctor">
            <summary>
            Creates a new instance of the MemberPreferences class.
            </summary>
        </member>
        <member name="M:Manatee.Trello.MemberPreferences.Refresh">
            <summary>
            Retrieves updated data from the service instance and refreshes the object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.MemberPreferences.ColorBlind">
            <summary>
            Enables/disables color-blind mode.
            </summary>
        </member>
        <member name="P:Manatee.Trello.MemberPreferences.MinutesBetweenSummaries">
            <summary>
            Gets or sets the number of minutes between summary emails.
            </summary>
        </member>
        <member name="P:Manatee.Trello.MemberPreferences.SendSummaries">
            <summary>
            Enables/disables summary emails.
            </summary>
        </member>
        <member name="P:Manatee.Trello.MemberPreferences.MinutesBeforeDeadlineToNotify">
            <summary>
            Gets or sets the number of minutes before a deadline to notify the member.
            </summary>
        </member>
        <member name="P:Manatee.Trello.MemberPreferences.IsStubbed">
            <summary>
            Gets whether this entity represents an actual entity on Trello.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Notification">
            <summary>
            Represents a member notification.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Notification.#ctor">
            <summary>
            Creates a new instance of the Notification class.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Notification.Equals(Manatee.Trello.Notification)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Manatee.Trello.Notification.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The object to compare with the current object. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.Notification.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.Notification.CompareTo(Manatee.Trello.Notification)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <returns>
            A value that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the <paramref name="other"/> parameter.Zero This object is equal to <paramref name="other"/>. Greater than zero This object is greater than <paramref name="other"/>. 
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Manatee.Trello.Notification.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.Notification.Refresh">
            <summary>
            Retrieves updated data from the service instance and refreshes the object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Notification.Attachment">
            <summary>
            Gets the attachment, if one exists, associated with the action.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Notification.Board">
            <summary>
            Gets the board, if one exists, associated with the action.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Notification.Card">
            <summary>
            Gets the card, if one exists, associated with the action.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Notification.CardShortId">
            <summary>
            Gets the short ID of the card, if one exists, associated with the action.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Notification.CheckList">
            <summary>
            Gets the check list, if one exists, associated with the action.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Notification.CheckItem">
            <summary>
            Gets the check item, if one exists, associated with the action.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Notification.Data">
            <summary>
            Data associated with the notification.  Contents depend upon the notification's type.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Notification.Date">
            <summary>
             The date on which the notification was created.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Notification.Id">
            <summary>
            Gets a unique identifier (not necessarily a GUID).
            </summary>
        </member>
        <member name="P:Manatee.Trello.Notification.IsUnread">
            <summary>
            Gets or sets whether the notification has been read.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Notification.List">
            <summary>
            Gets the list, if one exists, associated with the action.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Notification.ListAfter">
            <summary>
            Gets the list to which a card was moved, if one exists, associated with the action.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Notification.ListBefore">
            <summary>
            Gets the list from which a card was moved, if one exists, associated with the action.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Notification.Member">
            <summary>
            Gets the member, if one exists, associated with the action.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Notification.MemberCreator">
            <summary>
            Gets the member whose action spawned the notification.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Notification.Organization">
            <summary>
            Gets the organization, if one exists, associated with the action.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Notification.SourceBoard">
            <summary>
            Gets the board which was copied, if one exists, associated with the action.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Notification.SourceCard">
            <summary>
            Gets the card which was copied, if one exists, associated with the action.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Notification.Text">
            <summary>
            Gets the text, if one exists, associated with the action.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Notification.Type">
            <summary>
            Gets the notification's type.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Notification.IsStubbed">
            <summary>
            Gets whether this entity represents an actual entity on Trello.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Organization">
            <summary>
            Represents an organization.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Organization.#ctor">
            <summary>
            Creates a new instance of the Organization class.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Organization.AddOrUpdateMember(Manatee.Trello.Member,Manatee.Trello.OrganizationMembershipType)">
            <summary>
             Adds an existing member to the organization or updates the permissions of a member already in the organization.
            </summary>
            <param name="member">The member</param>
            <param name="type">The permission level for the member</param>
        </member>
        <member name="M:Manatee.Trello.Organization.CreateBoard(System.String)">
            <summary>
            Creates a board for the organization, owned by the current member.
            </summary>
            <param name="name">The name of the board.</param>
            <returns>The newly-created Board object.</returns>
        </member>
        <member name="M:Manatee.Trello.Organization.Delete">
            <summary>
            Deletes the organization.  This cannot be undone.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Organization.InviteMember(Manatee.Trello.Member,Manatee.Trello.BoardMembershipType)">
            <summary>
            Extends an invitation to the organization to another member.
            </summary>
            <param name="member">The member to invite.</param>
            <param name="type">The level of membership offered.</param>
        </member>
        <member name="M:Manatee.Trello.Organization.RemoveMember(Manatee.Trello.Member)">
            <summary>
             Removes a member from the organization.
            </summary>
            <param name="member"></param>
        </member>
        <member name="M:Manatee.Trello.Organization.RescindInvitation(Manatee.Trello.Member)">
            <summary>
            Rescinds an existing invitation to the organization.
            </summary>
            <param name="member"></param>
        </member>
        <member name="M:Manatee.Trello.Organization.Equals(Manatee.Trello.Organization)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Manatee.Trello.Organization.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The object to compare with the current object. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.Organization.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.Organization.CompareTo(Manatee.Trello.Organization)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <returns>
            A value that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the <paramref name="other"/> parameter.Zero This object is equal to <paramref name="other"/>. Greater than zero This object is greater than <paramref name="other"/>. 
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Manatee.Trello.Organization.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.Organization.Refresh">
            <summary>
            Retrieves updated data from the service instance and refreshes the object.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Organization.Manatee#Trello#Internal#ICanWebhook#ApplyAction(Manatee.Trello.Action)">
            <summary>
            Applies the changes an action represents.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:Manatee.Trello.Organization.VerifyNotExpired">
            <summary>
            Verifies that the object is not expired and updates if necessary.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Organization.Actions">
            <summary>
             Enumerates all actions associated with this organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Organization.Boards">
            <summary>
            Enumerates the boards owned by the organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Organization.Description">
            <summary>
            Gets or sets the description for the organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Organization.DisplayName">
            <summary>
            Gets or sets the name to be displayed for the organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Organization.Id">
            <summary>
            Gets a unique identifier (not necessarily a GUID).
            </summary>
        </member>
        <member name="P:Manatee.Trello.Organization.InvitedMembers">
            <summary>
            Enumerates all members who have received invitations to this organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Organization.IsPaidAccount">
            <summary>
            Gets whether this organization has paid features.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Organization.LogoHash">
            <summary>
            Gets the organization's logo hash.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Organization.Members">
            <summary>
            Enumerates the members who belong to the organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Organization.Memberships">
            <summary>
            Enumerates the members who belong to the organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Organization.Name">
            <summary>
            Gets or sets the name of the organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Organization.PowerUps">
            <summary>
            Enumerates the powerups obtained by the organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Organization.Preferences">
            <summary>
             Gets the set of preferences for the organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Organization.PremiumFeatures">
            <summary>
            Gets a collection of premium features available to the organization.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Organization.Url">
            <summary>
            Gets the URL to the organization's profile.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Organization.Website">
            <summary>
            Gets or sets the organization's website.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Organization.IsStubbed">
            <summary>
            Gets whether this entity represents an actual entity on Trello.
            </summary>
        </member>
        <member name="T:Manatee.Trello.SearchResults">
            <summary>
            Contains the results of a text-based search within the current member's boards
            and organizations as well as the parameters which yielded the results.
            </summary>
        </member>
        <member name="M:Manatee.Trello.SearchResults.Refresh">
            <summary>
            Retrieves updated data from the service instance and refreshes the object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.SearchResults.Actions">
            <summary>
            Enumerates the Actions which match the provided query.
            </summary>
        </member>
        <member name="P:Manatee.Trello.SearchResults.Boards">
            <summary>
            Enumerates the Boards which match the provided query.
            </summary>
        </member>
        <member name="P:Manatee.Trello.SearchResults.Cards">
            <summary>
            Enumerates the Cards which match the provided query.
            </summary>
        </member>
        <member name="P:Manatee.Trello.SearchResults.Members">
            <summary>
            Enumerates the Members which match the provided query.
            </summary>
        </member>
        <member name="P:Manatee.Trello.SearchResults.Organizations">
            <summary>
            Enumerates the Organizations which match the provided query.
            </summary>
        </member>
        <member name="P:Manatee.Trello.SearchResults.IsStubbed">
            <summary>
            Gets whether this entity represents an actual entity on Trello.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Token">
            <summary>
            Exposes details for a user token on Trello.com.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Token.#ctor">
            <summary>
            Creates a new instance of the Token class.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Token.Delete">
            <summary>
            Delete the token.  This cannot be undone.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Token.CompareTo(Manatee.Trello.Token)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <returns>
            A value that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the <paramref name="other"/> parameter.Zero This object is equal to <paramref name="other"/>. Greater than zero This object is greater than <paramref name="other"/>. 
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Manatee.Trello.Token.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.Token.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The object to compare with the current object. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.Token.Equals(Manatee.Trello.Token)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Manatee.Trello.Token.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Manatee.Trello.Token.Refresh">
            <summary>
            Retrieves updated data from the service instance and refreshes the object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Token.BoardPermissions">
            <summary>
            Gets the scope of permissions granted to boards.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Token.DateCreated">
            <summary>
            Gets the date a token was created.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Token.DateExpires">
            <summary>
            Gets the date, if any, a token expires.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Token.Id">
            <summary>
            Gets a unique identifier (not necessarily a GUID).
            </summary>
        </member>
        <member name="P:Manatee.Trello.Token.Identifier">
            <summary>
            Gets the application which requested a token.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Token.Member">
            <summary>
            Gets the member who issued the token.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Token.MemberPermissions">
            <summary>
            Gets the scope of permissions granted to members.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Token.OrganizationPermissions">
            <summary>
            Gets the scope of permissions granted to organizations.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Token.IsStubbed">
            <summary>
            Gets whether this entity represents an actual entity on Trello.
            </summary>
        </member>
        <member name="T:Manatee.Trello.TrelloService">
            <summary>
            Provides an interface to retrieving data from Trello.com.
            </summary>
        </member>
        <member name="M:Manatee.Trello.TrelloService.#ctor(Manatee.Trello.Contracts.ITrelloServiceConfiguration,Manatee.Trello.TrelloAuthorization)">
            <summary>
            Creates a new instance of the TrelloService class using a given configuration.
            </summary>
            <param name="configuration">A configuration object.</param>
            <param name="auth">The authorization object for this service.</param>
        </member>
        <member name="M:Manatee.Trello.TrelloService.Finalize">
            <summary>
            Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:Manatee.Trello.TrelloService.Retrieve``1(System.String)">
            <summary>
            Retrieves the specified object from Trello.com and caches it.
            </summary>
            <typeparam name="T">The type of object to retrieve.</typeparam>
            <param name="id">The id of the object to retrieve.</param>
            <returns>The requested object or null if the object could not be found.</returns>
            <remarks>
            Will return null if the supplied ID does not match the type of object.  In the case of
            Members, the member's username may be supplied instead of their ID.
            </remarks>
        </member>
        <member name="M:Manatee.Trello.TrelloService.Search(System.String,System.Collections.Generic.List{Manatee.Trello.Contracts.ExpiringObject},Manatee.Trello.SearchModelType)">
            <summary>
            Searches actions, boards, cards, members and organizations for a provided
            query string.
            </summary>
            <param name="query">The query string.</param>
            <param name="context">The items in which to perform the search.</param>
            <param name="modelTypes">The model types to return.  Can be combined using the '|' operator.</param>
            <returns>An object which contains the results of the query.</returns>
        </member>
        <member name="M:Manatee.Trello.TrelloService.SearchMembers(System.String,System.Int32)">
            <summary>
            Searches for members whose names or usernames match a provided query string.
            </summary>
            <param name="query">The query string.</param>
            <param name="limit">The maximum number of results to return.</param>
            <returns>A collection of members.</returns>
        </member>
        <member name="M:Manatee.Trello.TrelloService.HoldRequests">
            <summary>
            Instructs the service to stop sending requests.
            </summary>
        </member>
        <member name="M:Manatee.Trello.TrelloService.ResumeRequests">
            <summary>
            Instructs the service to continue sending requests.
            </summary>
        </member>
        <member name="M:Manatee.Trello.TrelloService.ProcessWebhookNotification(System.String)">
            <summary>
            Processes a received webhook notification.
            </summary>
            <param name="body"></param>
        </member>
        <member name="M:Manatee.Trello.TrelloService.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Manatee.Trello.TrelloService.UserToken">
            <summary>
            Allows the TrelloService instance to access data as if it was the member
            who provided the token.
            </summary>
        </member>
        <member name="P:Manatee.Trello.TrelloService.Me">
            <summary>
            Gets the Member object associated with the provided AppKey.
            </summary>
        </member>
        <member name="P:Manatee.Trello.TrelloService.AllowSelfUpdate">
            <summary>
            Gets or sets whether entities are allowed to update themselves.  A value of false implies that
            updates will be performed via webhook notifications or manually.
            </summary>
        </member>
        <member name="T:Manatee.Trello.Webhook`1">
            <summary>
            Details a requested webhook to Trello.com.
            </summary>
            <typeparam name="T">The type of entity the webhook monitors.</typeparam>
        </member>
        <member name="M:Manatee.Trello.Webhook`1.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Manatee.Trello.Webhook`1"/> class.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Webhook`1.Delete">
            <summary>
            Deletes the webhook.
            </summary>
        </member>
        <member name="M:Manatee.Trello.Webhook`1.Equals(Manatee.Trello.Webhook{`0})">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Manatee.Trello.Webhook`1.Refresh">
            <summary>
            Retrieves updated data from the service instance and refreshes the object.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Webhook`1.CallbackUrl">
            <summary>
            Gets or sets the URL which receives notification messages.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Webhook`1.Description">
            <summary>
            Gets or sets the description of the webhook.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Webhook`1.Entity">
            <summary>
            Gets or sets the entity which the webhook monitors.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Webhook`1.IsActive">
            <summary>
            Gets or sets whether the webhook is active.
            </summary>
        </member>
        <member name="P:Manatee.Trello.Webhook`1.IsStubbed">
            <summary>
            Gets whether this entity represents an actual entity on Trello.
            </summary>
        </member>
    </members>
</doc>
